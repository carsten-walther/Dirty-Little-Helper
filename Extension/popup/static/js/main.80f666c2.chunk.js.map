{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","pages/Home.tsx","services/Storage.ts","services/TextService.ts","utilities/Utilities.ts","pages/Texts.tsx","services/DeviceService.ts","pages/Devices.tsx","global/App.tsx","index.tsx"],"names":["Header","props","title","backTo","children","AppBar","position","style","top","bottom","Toolbar","Grid","container","justify","this","IconButton","edge","color","component","to","ChevronLeft","Typography","variant","React","Component","Footer","state","pathMap","BottomNavigation","showLabels","BottomNavigationAction","label","icon","Apps","Message","Home","actions","name","func","toggleGridOverlay","params","toggleOutlines","chrome","tabs","query","active","currentWindow","sendMessage","id","function","selector","attribute","length","paddingTop","paddingBottom","map","action","index","item","xs","padding","Paper","elevation","margin","height","Button","onClick","width","textTransform","storage","window","localStorage","set","key","value","Promise","resolve","reject","setItem","JSON","stringify","err","get","getItem","parse","undefined","TextService","texts","storageKey","find","text","Math","max","parseInt","push","toString","content","save","indexOf","splice","cropText","str","chars","substring","openPopupWindow","windowWidth","windowHeight","url","userAgent","left","round","screen","windows","create","type","focused","info","webRequest","onBeforeSendHeaders","addListener","details","i","requestHeaders","urls","windowId","insertCSS","runAt","code","Transition","forwardRef","ref","Slide","direction","Texts","dialogOpen","insertText","bind","openNewDialog","openEditDialog","closeDialog","handleChange","handleSubmit","handleDelete","load","setState","event","target","update","preventDefault","delete","Add","List","ListItem","dense","button","ListItemText","primary","secondary","paddingRight","ListItemSecondaryAction","Edit","confirm","Delete","Dialog","open","onClose","TransitionComponent","keepMounted","noValidate","autoComplete","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","required","onChange","multiline","rows","DialogActions","DeviceService","devices","device","Devices","group","userAgents","console","log","indexGroup","indexDevice","subheader","backgroundColor","groupIndex","ListSubheader","cursor","disableTypography","fontSize","fontWeight","openGroupBrowser","deleteGroup","deviceIndex","openDeviceBrowser","deleteDevice","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80f666c2.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Toolbar, Grid, Typography, IconButton } from '@material-ui/core'\nimport { ChevronLeft } from '@material-ui/icons'\n\ninterface HeaderProps {\n  title?: string,\n  backTo?: string|null\n  children?: any|null\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n\n  constructor(props: HeaderProps) {\n    super(props)\n    props = {\n      title: '',\n      backTo: null,\n      children: null\n    }\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{ top: 0, bottom: 'auto' }}>\n        <Toolbar>\n          <Grid container justify=\"flex-start\">\n            {this.props.backTo ? (\n              <IconButton edge=\"start\" color=\"inherit\" component={props => <Link {...props} to={this.props.backTo}/>}>\n                <ChevronLeft />\n              </IconButton>\n            ) : null}\n            <Typography variant=\"h6\">\n              {this.props.title}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            {this.props.children ? this.props.children : null}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { Apps, Devices, Message } from '@material-ui/icons'\n\nexport default class Footer extends React.Component {\n\n  state = {\n    pathMap: [\n      '/',\n      '/devices',\n      '/texts'\n    ]\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{ top: 'auto', bottom: 0 }}>\n        <BottomNavigation showLabels>\n          <BottomNavigationAction label=\"Tools\" icon={<Apps />} component={props => <Link {...props} to={this.state.pathMap[0]}/>}/>\n          <BottomNavigationAction label=\"Devices\" icon={<Devices />} component={props => <Link {...props} to={this.state.pathMap[1]}/>}/>\n          <BottomNavigationAction label=\"Texts\" icon={<Message />} component={props => <Link {...props} to={this.state.pathMap[2]}/>}/>\n        </BottomNavigation>\n      </AppBar>\n    )\n  }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { Grid, Paper, Button } from '@material-ui/core'\n\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nexport default class Home extends React.Component {\n\n  actions = [\n    {\n      name: 'Grid Overlay',\n      func: this.toggleGridOverlay,\n      params: []\n    }, {\n      name: 'Outline Headings',\n      func: this.toggleOutlines,\n      params: ['outlineHeadings']\n    }, {\n      name: 'Outline Image Alternative Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'img', 'alt']\n    }, {\n      name: 'Outline Anchor Title Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'a', 'title']\n    }, {\n      name: 'Outline Button Title Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'button', 'title']\n    }\n  ]\n\n  toggleGridOverlay() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleGridOverlay'\n      })\n    })\n  }\n\n  toggleOutlines(func: string, selector: string, attribute: string) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: func,\n        selector: selector,\n        attribute: attribute\n      })\n    })\n  }\n  \n  render() {\n    return (\n      <>\n\n        <Header title=\"Dirty Little Helper\"/>\n\n        <main>\n\n          {this.actions.length > 0 ? (\n            <Grid container style={{ paddingTop: 10, paddingBottom: 10 }}>\n              {this.actions.map((action: any, index: number) => (\n                <Grid key={index} item xs={4} style={{ padding: 5 }}>\n                  <Paper elevation={0} style={{ margin: 0, padding: 0, height: 115 }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => action.func(action.params)} style={{ width: '100%', height: '100%', textTransform: 'none' }}>\n                      {action.name}\n                    </Button>\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          ) : null}\n\n        </main>\n\n        <Footer/>\n\n      </>\n    )\n  }\n}\n","const storage = window.localStorage;\n\nexport function set(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.setItem(key, JSON.stringify(value))\n      resolve()\n    } catch (err) {\n      reject(`Couldn't store object ${err}`)\n    }\n  })\n}\n\nexport function remove(key: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.removeItem(key)\n      resolve()\n    } catch (err) {\n      reject(`Couldn't remove object ${err}`)\n    }\n  })\n}\n\nexport function get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      if (storage) {\n        const item = storage.getItem(key)\n        if (item != null) {\n          resolve(JSON.parse(item))\n        }\n      }\n      resolve(undefined)\n    } catch (err) {\n      reject(`Couldn't get object: ${err}`)\n    }\n  })\n}\n","import { Text } from '../interfaces/Text'\nimport { get, set } from './Storage'\n\nclass TextServiceController {\n\n  public texts: Text[] = []\n  private storageKey: string = 'texts'\n\n  async load(): Promise<Text[]> {\n    if (this.texts.length > 0) {\n      return this.texts\n    } else {\n      this.texts = (await get(this.storageKey)) || []\n      return this.texts\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.texts)\n  }\n\n  get(id: any): Text {\n    return this.texts.find(text => text.id === id) as Text\n  }\n\n  create(text: Text): void {\n    let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n    this.texts.push({\n      id: id.toString(),\n      name: text.name,\n      content: text.content\n    })\n    this.save()\n  }\n\n  update(id: any, text: Text): void {\n    let index = this.texts.indexOf(this.get(id))\n    this.texts[index] = text\n    this.save()\n  }\n\n  delete(text: Text): void {\n    let index = this.texts.indexOf(text)\n    if (index > -1) {\n      this.texts.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const TextService = new TextServiceController()\n","/*global chrome*/\n\n/**\n * cropText\n *\n * @param str\n * @param chars\n */\nexport function cropText(str: string, chars?: number) {\n  if (!chars) {\n    chars = 30\n  }\n  return str.length > chars ? str.substring(0, chars - 3) + \"...\" : str;\n}\n\n/**\n * openPopupWindow\n *\n * @param windowWidth\n * @param windowHeight\n * @param url\n * @param userAgent\n */\nexport function openPopupWindow(windowWidth: number, windowHeight: number, url: string, userAgent: any) {\n  let width = windowWidth + 10\n  let height = windowHeight + 28\n  let left = Math.round(window.screen.width / 2 - width / 2)\n  let top = Math.round(window.screen.height / 2 - height / 2)\n\n  // @ts-ignore\n  chrome.windows.create({\n    url: url,\n    type: 'popup',\n    width: width,\n    height: height,\n    left: left,\n    top: top,\n    focused: !0,\n    // @ts-ignore\n  }, (info) => {\n    addListener(info, userAgent)\n    // @ts-ignore\n    chrome.tabs.insertCSS(info.tabs[0].id, {\n      runAt: 'document_start',\n      code: '::-webkit-scrollbar{width:9px!important;height:9px!important}::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment{height:0;width:0;display:none}::-webkit-scrollbar-track-piece{margin:1px;padding:0;width:6px!important;height:5px!important;background:rgba(255,255,255,0.3)}::-webkit-scrollbar:hover{background:rgba(128,128,128,0.2)}::-webkit-scrollbar-thumb{margin:1px!important;border:2px solid transparent;width:5px!important;background-color:rgba(0,0,0,0.4)!important;z-index:9999;-webkit-border-radius:12px;background-clip:content-box}::-webkit-scrollbar-corner{background:rgba(255,255,255,0.3);border:1px solid transparent}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,0.8)!important;border:2px solid transparent}::-webkit-scrollbar-thumb:active{background-color:rgba(0,0,0,0.6)!important;border:2px solid transparent}',\n    })\n  })\n}\n\n/**\n * addListener\n *\n * @param info\n * @param userAgent\n */\nexport function addListener(info: any, userAgent: any) {\n  // @ts-ignore\n  chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n    for (let i = 0; i < details.requestHeaders.length; ++i) {\n      if (details.requestHeaders[i].name === 'User-Agent') {\n        details.requestHeaders[i].value = userAgent\n        break\n      }\n    }\n    return {\n      requestHeaders: details.requestHeaders\n    }\n  }, {\n    urls: ['<all_urls>'],\n    windowId: info.id\n  }, [\n    'blocking',\n    'requestHeaders'\n  ])\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Button, List, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField, Slide } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport { Text } from '../interfaces/Text'\nimport { TextService } from '../services/TextService'\nimport { cropText } from '../utilities/Utilities'\n\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Texts extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    text: {\n      id: undefined,\n      name: undefined,\n      content: undefined\n    },\n    texts: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      texts: []\n    }\n\n    this.insertText = this.insertText.bind(this)\n    this.openNewDialog = this.openNewDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  insertText(text: Text) {\n    // @ts-ignore\n    chrome.tabs.query({\n      'active': true, 'currentWindow': true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'insertText', text: text.content\n      })\n    })\n  }\n\n  openNewDialog() {\n    this.setState({\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      dialogOpen: true\n    })\n  }\n\n  openEditDialog(text: Text) {\n    this.setState({\n      text: text,\n      dialogOpen: true\n    })\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      text: {...this.state.text, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleSubmit(event: any) {\n    if (typeof this.state.text.id === 'undefined') {\n      TextService.create(this.state.text as unknown as Text)\n    } else {\n      TextService.update(this.state.text.id, this.state.text as unknown as Text)\n    }\n\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n\n    this.closeDialog()\n\n    event.preventDefault()\n  }\n\n  async handleDelete(text: Text) {\n    let texts = [...(await TextService.load())]\n    let index = texts.indexOf(text)\n\n    if (index > -1) {\n      texts.splice(index, 1)\n    }\n\n    await TextService.delete(text)\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dummy Texts\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.texts.length > 0 ? (\n            <List>\n              {this.state.texts.map((text: any, index: number) => (\n                <ListItem key={index} dense button onClick={() => this.insertText(text)} title=\"Insert\">\n                  <ListItemText primary={text.name} secondary={cropText(text.content, 70)} style={{paddingRight: 48}}/>\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"start\" color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(text)}>\n                      <Edit/>\n                    </IconButton>\n                    <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.handleDelete(text)}}>\n                      <Delete/>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          ) : null}\n        </main>\n\n        <Footer/>\n\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <DialogTitle>\n              Text\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a name and the text, that will be inserted.\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.text.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField label=\"Content\" name=\"content\" value={this.state.text.content || ''} autoFocus fullWidth multiline rows={6} required onChange={this.handleChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.closeDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import { get, set } from './Storage'\n\nclass DeviceServiceController {\n\n  public devices: any[] = []\n  private storageKey: string = 'devices'\n\n  async load(): Promise<any[]> {\n    if (this.devices.length > 0) {\n      return this.devices\n    } else {\n      this.devices = (await get(this.storageKey)) || []\n      return this.devices\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.devices)\n  }\n\n  get(id: any): any {\n    return this.devices.find(device => device.id === id) as any\n  }\n\n  create(device: any): void {\n    let id = Math.max(...this.devices.map(device => parseInt(device.id)), 0) + 1\n    this.devices.push({\n      id: id.toString(), name: device.name, content: device.content\n    })\n    this.save()\n  }\n\n  update(id: any, device: any): void {\n    let index = this.devices.indexOf(this.get(id))\n    this.devices[index] = device\n    this.save()\n  }\n\n  delete(device: any): void {\n    let index = this.devices.indexOf(device)\n    if (index > -1) {\n      this.devices.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const DeviceService = new DeviceServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Typography, List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button, Slide } from '@material-ui/core'\nimport { Edit, Delete, Add } from '@material-ui/icons'\n\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport { DeviceService } from '../services/DeviceService'\nimport { cropText, openPopupWindow } from '../utilities/Utilities'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Devices extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    device: {\n      name: undefined,\n      userAgent: undefined,\n      width: undefined,\n      height: undefined\n    },\n    devices: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      device: {\n        name: undefined,\n        userAgent: undefined,\n        width: undefined,\n        height: undefined\n      },\n      devices: []\n    }\n\n    this.openNewDialog = this.openNewDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  openNewDialog() {\n    this.setState({\n      device: {},\n      dialogOpen: true\n    })\n  }\n\n  openEditDialog(device: any) {\n    this.setState({\n      device: device,\n      dialogOpen: true\n    })\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      device: {...this.state.device, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleSubmit(event: any) {\n\n  }\n\n  openGroupBrowser(group: any) {\n    group.userAgents.map((userAgent: any) => {\n      // @ts-ignore\n      chrome.tabs.query({\n        active: true, currentWindow: true\n        // @ts-ignore\n      }, (tabs) => {\n        // @ts-ignore\n        openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n      })\n    })\n  }\n\n  openDeviceBrowser(userAgent: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true, currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n    })\n  }\n\n  async deleteGroup(group: any) {\n    console.log(this.state.devices)\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    this.state.devices.splice(indexGroup, 1)\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  async deleteDevice(group: any, device: any) {\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    let indexDevice = this.state.devices[indexGroup].userAgents.indexOf(device)\n    // @ts-ignore\n    this.state.devices[indexGroup].userAgents.splice(indexDevice, 1)\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Devices\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.devices.length > 0 ? (\n            <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n              {this.state.devices.map((group: any, groupIndex: number) => (\n                <li key={`section-${groupIndex}`} style={{backgroundColor: 'inherit'}}>\n                  <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                    <ListSubheader title=\"Open all in Browser\" style={{cursor: 'pointer', backgroundColor: '#ddd'}}>\n                      <ListItemText disableTypography primary={<Typography style={{fontSize: 18, fontWeight: 'bold'}}>{cropText(group.name, 25)}</Typography>} onClick={() => this.openGroupBrowser(group)} style={{paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0}}/>\n                      <ListItemSecondaryAction>\n                        <IconButton color=\"inherit\" title=\"Edit Element\">\n                          <Edit/>\n                        </IconButton>\n                        <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this group?')) this.deleteGroup(group)}}>\n                          <Delete/>\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListSubheader>\n                    {group.userAgents.length > 0 ? (\n                      <List>\n                        {group.userAgents.map((device: any, deviceIndex: number) => (\n                          <ListItem key={deviceIndex} dense button onClick={() => this.openDeviceBrowser(device)} title=\"Open in Browser\">\n                            <ListItemText style={{paddingRight: 48}} primary={device.name} secondary={`Width ${device.width}px Height ${device.height}px`}/>\n                            <ListItemSecondaryAction>\n                              <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(device)}>\n                                <Edit/>\n                              </IconButton>\n                              <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteDevice(group, device)}}>\n                                <Delete/>\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))}\n                      </List>\n                    ) : null}\n                  </ul>\n                </li>))}\n            </List>\n          ) : null}\n        </main>\n\n        <Footer/>\n\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <DialogTitle>\n              Device\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a ...\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.device.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"UserAgent\" name=\"userAgent\" value={this.state.device.userAgent || ''} autoFocus fullWidth multiline rows={3} required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"Width\" name=\"width\" value={this.state.device.width || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"Height\" name=\"height\" value={this.state.device.height || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.closeDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Route } from 'react-router-dom'\n\nimport Home from '../pages/Home'\nimport Texts from '../pages/Texts'\nimport Devices from '../pages/Devices'\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/texts\" component={Texts} exact={true}/>\n        <Route path=\"/devices\" component={Devices} exact={true}/>\n      </Router>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './global/App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}