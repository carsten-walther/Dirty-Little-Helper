{"version":3,"sources":["components/Home.tsx","components/Devices.tsx","services/Storage.ts","services/TextsService.ts","components/Texts.tsx","components/TextForm.tsx","global/App.tsx","index.tsx"],"names":["Home","to","React","Component","Devices","storage","window","localStorage","set","key","value","Promise","resolve","reject","setItem","JSON","stringify","err","get","item","getItem","parse","undefined","TextsService","storageKey","texts","this","length","id","find","text","Math","max","map","parseInt","push","toString","name","content","save","index","indexOf","splice","Texts","state","load","setState","delete","console","log","className","onClick","deleteText","TextForm","props","handleSubmit","bind","handleChange","params","match","event","target","create","update","preventDefault","history","onSubmit","htmlFor","type","onChange","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7821919.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Home extends React.Component {\n\n  render() {\n    return (\n      <>\n        <section>\n          <h2>Devices</h2>\n          <p>Manage devices for simulating your web contents.</p>\n          <div>\n            <Link to=\"/devices\">\n              <button>Devices</button>\n            </Link>\n          </div>\n        </section>\n        <section>\n          <h2>Texts</h2>\n          <p>Manage dummy texts for inserting into input fields.</p>\n          <div>\n            <Link to=\"/texts\">\n              <button>Texts</button>\n            </Link>\n          </div>\n        </section>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Devices extends React.Component {\n\n  render() {\n    return (\n      <>\n        <h2>Devices</h2>\n        <Link to=\"/\">\n          <button>Back</button>\n        </Link>\n      </>\n    )\n  }\n}\n","const storage = window.localStorage;\n\nexport function set(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.setItem(key, JSON.stringify(value))\n      resolve()\n    } catch (err) {\n      reject(`Couldn't store object ${err}`)\n    }\n  })\n}\n\nexport function remove(key: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.removeItem(key)\n      resolve()\n    } catch (err) {\n      reject(`Couldn't remove object ${err}`)\n    }\n  })\n}\n\nexport function get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      if (storage) {\n        const item = storage.getItem(key)\n        if (item != null) {\n          resolve(JSON.parse(item))\n        }\n      }\n      resolve(undefined)\n    } catch (err) {\n      reject(`Couldn't get object: ${err}`)\n    }\n  })\n}\n","import { set, get } from './Storage'\nimport { Text } from '../interfaces/Text'\n\nclass TextsServiceController {\n\n  private storageKey: string = 'texts'\n\n  public texts: Text[] = []\n\n  async load(): Promise<Text[]> {\n    if (this.texts.length > 0) {\n      return this.texts\n    } else {\n      this.texts = (await get(this.storageKey)) || []\n      return this.texts\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.texts)\n  }\n\n  get(id: any): Text {\n    return this.texts.find(text => text.id === id) as Text\n  }\n\n  create(text: Text): void {\n    // Create a unique id that is one larger than the current largest id\n    let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n    this.texts.push({\n      id: id.toString(),\n      name: text.name,\n      content: text.content\n    })\n    this.save()\n  }\n\n  update(id: any, text: Text): void {\n    // Get the index in the array of the text that was passed in\n    let index = this.texts.indexOf(this.get(id))\n    this.texts[index] = text\n    this.save()\n  }\n\n  delete(text: Text): void {\n    // Get the index in the array of the text that was passed in\n    let index = this.texts.indexOf(text)\n    // Delete that element of the array and resave the data\n    if (index > -1) {\n      this.texts.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const TextsService = new TextsServiceController()\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text } from \"../interfaces/Text\"\nimport { TextsService } from \"../services/TextsService\"\n\nexport default class Texts extends React.Component {\n\n  state = {\n    texts: []\n  }\n\n  async componentDidMount() {\n    this.setState({\n      texts: [...(await TextsService.load())]\n    })\n  }\n\n  async deleteText(text: Text) {\n    // @ts-ignore\n    let index = this.state.texts.indexOf(text)\n    if (index > -1) {\n      this.state.texts.splice(index, 1)\n    }\n    await TextsService.delete(text)\n    this.setState({\n      texts: [...(await TextsService.load())]\n    })\n  }\n\n  insertText(text: Text) {\n    console.log('insertText')\n  }\n\n  render() {\n    return (\n      <>\n        <h2>\n          Texts\n          <div className=\"float-right\">\n            <Link to=\"/\">\n              <button>Back</button>\n            </Link>\n            <Link to=\"/text/add\">\n              <button>Add</button>\n            </Link>\n          </div>\n        </h2>\n        <ul className=\"scrollable\">\n          {this.state.texts.map((text: Text, index: number) => (\n              <li key={index}>\n                <span>{text.name}</span>\n                <div className=\"float-right\">\n                  <Link to={`/text/show/${text.id}`}>\n                    <button>Edit</button>\n                  </Link>\n                  <button onClick={() => this.deleteText(text)}>Delete</button>\n                </div>\n                <div className=\"clearfix\"/>\n              </li>\n          ))}\n        </ul>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text } from \"../interfaces/Text\"\nimport { TextsService } from \"../services/TextsService\"\n\nexport default class TextForm extends React.Component {\n\n  state = {\n    id: undefined,\n    name: undefined,\n    content: undefined\n  }\n\n  constructor(props: any) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  async componentDidMount() {\n    // @ts-ignore\n    const { match: { params } } = this.props\n    if (params.id) {\n      await TextsService.load()\n      this.setState({...await TextsService.get(params.id)})\n    }\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit(event: any) {\n    let text = this.state as unknown as Text\n    if (typeof text.id === 'undefined') {\n      TextsService.create(text)\n    } else {\n      TextsService.update(text.id, text)\n    }\n    event.preventDefault()\n    // @ts-ignore\n    this.props.history.push(\"/texts\")\n  }\n\n  render() {\n    return (\n      <>\n        <h2>\n          Text\n          <div className=\"float-right\">\n            <Link to=\"/texts\">\n              <button>Back</button>\n            </Link>\n          </div>\n        </h2>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n          </div>\n          <div>\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" name=\"content\" value={this.state.content} onChange={this.handleChange}/>\n          </div>\n          <div className=\"float-right\">\n            <input type=\"submit\" value=\"Submit\" />\n          </div>\n        </form>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport Home from '../components/Home'\nimport Devices from '../components/Devices'\nimport Texts from '../components/Texts'\nimport TextForm from '../components/TextForm'\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <>\n        <header>\n          <h1>Dirty Little Helper</h1>\n        </header>\n        <main>\n          <Router>\n            <Route path=\"/\" component={Home} exact={true} />\n            <Route path=\"/devices\" component={Devices} exact={true} />\n            <Route path=\"/texts\" component={Texts} exact={true} />\n            <Route path=\"/text/add\" component={TextForm} exact={true} />\n            <Route path=\"/text/show/:id\" component={TextForm} exact={true} />\n          </Router>\n        </main>\n        <footer>\n          <p className=\"float-right\">Version: 2.0.0</p>\n        </footer>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './global/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}