{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","utilities/Utilities.ts","pages/Home.tsx","services/Storage.ts","services/TextService.ts","pages/Texts.tsx","services/DeviceService.ts","pages/Devices.tsx","global/App.tsx","index.tsx"],"names":["Footer","props","state","value","handleChange","bind","event","this","setState","AppBar","position","style","top","bottom","BottomNavigation","showLabels","onChange","BottomNavigationAction","label","icon","Apps","component","React","forwardRef","ref","to","Message","Component","Header","title","backTo","children","Toolbar","Grid","container","justify","IconButton","edge","color","ChevronLeft","Typography","variant","cropText","str","chars","length","substring","openPopupWindow","windowWidth","windowHeight","url","userAgent","width","height","left","Math","round","window","screen","chrome","windows","create","type","focused","info","webRequest","onBeforeSendHeaders","addListener","details","i","requestHeaders","name","urls","windowId","id","tabs","insertCSS","runAt","code","Home","actions","func","toggleGridOverlay","params","toggleOutlines","validate","query","active","currentWindow","sendMessage","function","selector","attribute","List","subheader","backgroundColor","map","action","index","padding","ListSubheader","ListItemText","disableTypography","primary","fontSize","fontWeight","paddingTop","paddingBottom","paddingRight","margin","paddingLeft","item","xs","Paper","elevation","Button","onClick","lineHeight","textTransform","storage","localStorage","set","key","Promise","resolve","reject","setItem","JSON","stringify","err","get","getItem","parse","undefined","TextService","texts","storageKey","find","text","max","parseInt","push","toString","content","save","indexOf","splice","Transition","Slide","direction","Texts","dialogOpen","insertText","openNewDialog","openEditDialog","closeDialog","handleSubmit","handleDelete","load","target","update","preventDefault","delete","Add","ListItem","dense","button","secondary","ListItemSecondaryAction","Edit","confirm","Delete","Dialog","open","onClose","TransitionComponent","keepMounted","noValidate","autoComplete","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","required","multiline","rows","DialogActions","DeviceService","devices","device","Devices","group","userAgents","forEach","console","log","indexGroup","indexDevice","groupIndex","cursor","openGroupBrowser","deleteGroup","deviceIndex","openDeviceBrowser","deleteDevice","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d297ae3.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { Apps, Devices, Message } from '@material-ui/icons'\n\nexport default class Footer extends React.Component {\n\n  state = {\n    value: 0\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      value: 0\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event: any, value: any) {\n    this.setState({\n      value: value\n    })\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{top: 'auto', bottom: 0}}>\n        <BottomNavigation showLabels value={this.state.value} onChange={(event, value) => this.handleChange(event, value)}>\n          <BottomNavigationAction label=\"Tools\" icon={<Apps />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/\"/>)}/>\n          <BottomNavigationAction label=\"Devices\" icon={<Devices />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/devices\"/>)}/>\n          <BottomNavigationAction label=\"Texts\" icon={<Message />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/texts\"/>)}/>\n        </BottomNavigation>\n      </AppBar>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Toolbar, Grid, Typography, IconButton } from '@material-ui/core'\nimport { ChevronLeft } from '@material-ui/icons'\n\ninterface HeaderProps {\n  title?: string,\n  backTo?: string|null\n  children?: any|null\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n\n  constructor(props: HeaderProps) {\n    super(props)\n\n    props = {\n      title: '',\n      backTo: null,\n      children: null\n    }\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{ top: 0, bottom: 'auto' }}>\n        <Toolbar>\n          <Grid container justify=\"flex-start\">\n            {this.props.backTo ? (\n              <IconButton edge=\"start\" color=\"inherit\" component={props => <Link {...props} to={this.props.backTo}/>}>\n                <ChevronLeft />\n              </IconButton>\n            ) : null}\n            <Typography variant=\"h6\">\n              {this.props.title}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            {this.props.children ? this.props.children : null}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n","/*global chrome*/\n\n/**\n * cropText\n *\n * @param str\n * @param chars\n */\nexport function cropText(str: string, chars?: number) {\n  if (!chars) {\n    chars = 30\n  }\n  return str.length > chars ? str.substring(0, chars - 3) + \"...\" : str;\n}\n\n/**\n * openPopupWindow\n *\n * @param windowWidth\n * @param windowHeight\n * @param url\n * @param userAgent\n */\nexport function openPopupWindow(windowWidth: number, windowHeight: number, url: string, userAgent: any) {\n  let width = windowWidth + 10\n  let height = windowHeight + 28\n  let left = Math.round(window.screen.width / 2 - width / 2)\n  let top = Math.round(window.screen.height / 2 - height / 2)\n\n  // @ts-ignore\n  chrome.windows.create({\n    url: url,\n    type: 'popup',\n    width: width,\n    height: height,\n    left: left,\n    top: top,\n    focused: !0,\n    // @ts-ignore\n  }, (info) => {\n    addListener(info, userAgent)\n    // @ts-ignore\n    chrome.tabs.insertCSS(info.tabs[0].id, {\n      runAt: 'document_start',\n      code: '::-webkit-scrollbar{width:9px!important;height:9px!important}::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment{height:0;width:0;display:none}::-webkit-scrollbar-track-piece{margin:1px;padding:0;width:6px!important;height:5px!important;background:rgba(255,255,255,0.3)}::-webkit-scrollbar:hover{background:rgba(128,128,128,0.2)}::-webkit-scrollbar-thumb{margin:1px!important;border:2px solid transparent;width:5px!important;background-color:rgba(0,0,0,0.4)!important;z-index:9999;-webkit-border-radius:12px;background-clip:content-box}::-webkit-scrollbar-corner{background:rgba(255,255,255,0.3);border:1px solid transparent}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,0.8)!important;border:2px solid transparent}::-webkit-scrollbar-thumb:active{background-color:rgba(0,0,0,0.6)!important;border:2px solid transparent}',\n    })\n  })\n}\n\n/**\n * addListener\n *\n * @param info\n * @param userAgent\n */\nexport function addListener(info: any, userAgent: any) {\n  // @ts-ignore\n  chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n    for (let i = 0; i < details.requestHeaders.length; ++i) {\n      if (details.requestHeaders[i].name === 'User-Agent') {\n        details.requestHeaders[i].value = userAgent\n        break\n      }\n    }\n    return {\n      requestHeaders: details.requestHeaders\n    }\n  }, {\n    urls: ['<all_urls>'],\n    windowId: info.id\n  }, [\n    'blocking',\n    'requestHeaders'\n  ])\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, Grid, Paper, Button, ListItemText, Typography, ListItemSecondaryAction, IconButton, ListSubheader } from '@material-ui/core'\n\nimport Header from '../components/Header'\nimport { cropText, openPopupWindow } from \"../utilities/Utilities\";\n\nexport default class Home extends React.Component {\n\n  actions = [\n    {\n      name: 'Tools',\n      actions: [\n        {\n          name: 'Grid Overlay',\n          func: this.toggleGridOverlay,\n          params: []\n        }, {\n          name: 'Outline Headings',\n          func: this.toggleOutlines,\n          params: ['outlineHeadings']\n        }, {\n          name: 'Outline Image Alternative Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'img', 'alt']\n        }, {\n          name: 'Outline Anchor Title Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'a', 'title']\n        }, {\n          name: 'Outline Button Title Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'button', 'title']\n        }\n      ]\n    }, {\n      name: 'Validation',\n      actions: [\n        {\n          name: 'Validate CSS',\n          func: this.validate,\n          params: ['http://jigsaw.w3.org/css-validator/validator?profile=css3&warning=0&uri=']\n        }, {\n          name: 'Validate HTML',\n          func: this.validate,\n          params: ['http://validator.w3.org/check?verbose=1&uri=']\n        }, {\n          name: 'Validate Feed',\n          func: this.validate,\n          params: ['http://validator.w3.org/feed/check.cgi?url=']\n        }, {\n          name: 'Validate Accessibility',\n          func: this.validate,\n          params: ['http://wave.webaim.org/report#/']\n        }, {\n          name: 'Validate Links',\n          func: this.validate,\n          params: ['http://validator.w3.org/checklink?check=Check&hide_type=all&summary=on&uri=']\n        }, {\n          name: 'Validate Structured Data',\n          func: this.validate,\n          params: ['https://search.google.com/test/rich-results?url=']\n        }\n      ]\n    }\n  ]\n\n  toggleGridOverlay() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleGridOverlay'\n      })\n    })\n  }\n\n  toggleOutlines(params: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: params[0],\n        selector: params[1],\n        attribute: params[2]\n      })\n    })\n  }\n\n  validate(url: string) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.create({ url: url + tabs[0].url })\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dirty Little Helper\"/>\n\n        <main>\n\n          {this.actions.length > 0 ? (\n            <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n              {this.actions.map((action: any, index: number) => (\n                <li key={`section-${index}`} style={{backgroundColor: 'inherit'}}>\n                  <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                    <ListSubheader style={{backgroundColor: '#ddd'}}>\n                      <ListItemText disableTypography primary={<Typography style={{fontSize: 18, fontWeight: 'bold'}}>{cropText(action.name, 25)}</Typography>} style={{paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0}}/>\n                    </ListSubheader>\n                    {action.actions.length > 0 ? (\n                      <Grid container style={{ paddingTop: 10, paddingBottom: 10, paddingLeft: 10, paddingRight: 10 }}>\n                        {action.actions.map((action: any, index: number) => (\n                          <Grid key={index} item xs={4} style={{ padding: 10 }}>\n                            <Paper elevation={0} style={{ margin: 0, padding: 0, height: 95 }}>\n                              <Button variant=\"contained\" color=\"primary\" onClick={() => action.func(action.params)} style={{ width: '100%', height: '100%', lineHeight: 1.25, textTransform: 'none' }}>\n                                {action.name}\n                              </Button>\n                            </Paper>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    ) : null}\n                  </ul>\n                </li>\n              ))}\n            </List>\n          ) : null}\n\n        </main>\n      </>\n    )\n  }\n}\n","const storage = window.localStorage;\n\nexport function set(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.setItem(key, JSON.stringify(value))\n      resolve()\n    } catch (err) {\n      reject(`Couldn't store object ${err}`)\n    }\n  })\n}\n\nexport function remove(key: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.removeItem(key)\n      resolve()\n    } catch (err) {\n      reject(`Couldn't remove object ${err}`)\n    }\n  })\n}\n\nexport function get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      if (storage) {\n        const item = storage.getItem(key)\n        if (item != null) {\n          resolve(JSON.parse(item))\n        }\n      }\n      resolve(undefined)\n    } catch (err) {\n      reject(`Couldn't get object: ${err}`)\n    }\n  })\n}\n","import { Text } from '../interfaces/Text'\nimport { get, set } from './Storage'\n\nclass TextServiceController {\n\n  public texts: Text[] = []\n  private storageKey: string = 'texts'\n\n  async load(): Promise<Text[]> {\n    if (this.texts.length > 0) {\n      return this.texts\n    } else {\n      this.texts = (await get(this.storageKey)) || []\n      return this.texts\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.texts)\n  }\n\n  get(id: any): Text {\n    return this.texts.find(text => text.id === id) as Text\n  }\n\n  create(text: Text): void {\n    let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n    this.texts.push({\n      id: id.toString(),\n      name: text.name,\n      content: text.content\n    })\n    this.save()\n  }\n\n  update(id: any, text: Text): void {\n    let index = this.texts.indexOf(this.get(id))\n    this.texts[index] = text\n    this.save()\n  }\n\n  delete(text: Text): void {\n    let index = this.texts.indexOf(text)\n    if (index > -1) {\n      this.texts.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const TextService = new TextServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Button, List, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField, Slide } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport { Text } from '../interfaces/Text'\nimport { TextService } from '../services/TextService'\nimport { cropText } from '../utilities/Utilities'\n\nimport Header from '../components/Header'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Texts extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    text: {\n      id: undefined,\n      name: undefined,\n      content: undefined\n    },\n    texts: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      texts: []\n    }\n\n    this.insertText = this.insertText.bind(this)\n    this.openNewDialog = this.openNewDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  insertText(text: Text) {\n    // @ts-ignore\n    chrome.tabs.query({\n      'active': true, 'currentWindow': true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'insertText', text: text.content\n      })\n    })\n  }\n\n  openNewDialog() {\n    this.setState({\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      dialogOpen: true\n    })\n  }\n\n  openEditDialog(text: Text) {\n    this.setState({\n      text: text,\n      dialogOpen: true\n    })\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      text: {...this.state.text, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleSubmit(event: any) {\n    if (typeof this.state.text.id === 'undefined') {\n      TextService.create(this.state.text as unknown as Text)\n    } else {\n      TextService.update(this.state.text.id, this.state.text as unknown as Text)\n    }\n\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n\n    this.closeDialog()\n\n    event.preventDefault()\n  }\n\n  async handleDelete(text: Text) {\n    let texts = [...(await TextService.load())]\n    let index = texts.indexOf(text)\n\n    if (index > -1) {\n      texts.splice(index, 1)\n    }\n\n    await TextService.delete(text)\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dummy Texts\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.texts.length > 0 ? (\n            <List>\n              {this.state.texts.map((text: any, index: number) => (\n                <ListItem key={index} dense button onClick={() => this.insertText(text)} title=\"Insert\">\n                  <ListItemText primary={text.name} secondary={cropText(text.content, 70)} style={{paddingRight: 48}}/>\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"start\" color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(text)}>\n                      <Edit/>\n                    </IconButton>\n                    <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.handleDelete(text)}}>\n                      <Delete/>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          ) : null}\n        </main>\n\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <DialogTitle>\n              Text\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a name and the text, that will be inserted.\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.text.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField label=\"Content\" name=\"content\" value={this.state.text.content || ''} autoFocus fullWidth multiline rows={6} required onChange={this.handleChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.closeDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import { get, set } from './Storage'\n\nclass DeviceServiceController {\n\n  public devices: any[] = []\n  private storageKey: string = 'devices'\n\n  async load(): Promise<any[]> {\n    if (this.devices.length > 0) {\n      return this.devices\n    } else {\n      this.devices = (await get(this.storageKey)) || []\n      return this.devices\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.devices)\n  }\n\n  get(id: any): any {\n    return this.devices.find(device => device.id === id) as any\n  }\n\n  create(device: any): void {\n    let id = Math.max(...this.devices.map(device => parseInt(device.id)), 0) + 1\n    this.devices.push({\n      id: id.toString(), name: device.name, content: device.content\n    })\n    this.save()\n  }\n\n  update(id: any, device: any): void {\n    let index = this.devices.indexOf(this.get(id))\n    this.devices[index] = device\n    this.save()\n  }\n\n  delete(device: any): void {\n    let index = this.devices.indexOf(device)\n    if (index > -1) {\n      this.devices.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const DeviceService = new DeviceServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Typography, List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button, Slide } from '@material-ui/core'\nimport { Edit, Delete, Add } from '@material-ui/icons'\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport Header from '../components/Header'\nimport { DeviceService } from '../services/DeviceService'\nimport { cropText, openPopupWindow } from '../utilities/Utilities'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Devices extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    device: {\n      name: undefined,\n      userAgent: undefined,\n      width: undefined,\n      height: undefined\n    },\n    devices: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      device: {\n        name: undefined,\n        userAgent: undefined,\n        width: undefined,\n        height: undefined\n      },\n      devices: []\n    }\n\n    this.openNewDialog = this.openNewDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  openNewDialog() {\n    this.setState({\n      device: {},\n      dialogOpen: true\n    })\n  }\n\n  openEditDialog(device: any) {\n    this.setState({\n      device: device,\n      dialogOpen: true\n    })\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      device: {...this.state.device, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleSubmit(event: any) {\n\n  }\n\n  openGroupBrowser(group: any) {\n    group.userAgents.forEach((userAgent: any) => {\n      // @ts-ignore\n      chrome.tabs.query({\n        active: true, currentWindow: true\n        // @ts-ignore\n      }, (tabs) => {\n        // @ts-ignore\n        openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n      })\n    })\n  }\n\n  openDeviceBrowser(userAgent: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true, currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n    })\n  }\n\n  async deleteGroup(group: any) {\n    console.log(this.state.devices)\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    this.state.devices.splice(indexGroup, 1)\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  async deleteDevice(group: any, device: any) {\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    let indexDevice = this.state.devices[indexGroup].userAgents.indexOf(device)\n    // @ts-ignore\n    this.state.devices[indexGroup].userAgents.splice(indexDevice, 1)\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Devices\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.devices.length > 0 ? (\n            <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n              {this.state.devices.map((group: any, groupIndex: number) => (\n                <li key={`section-${groupIndex}`} style={{backgroundColor: 'inherit'}}>\n                  <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                    <ListSubheader title=\"Open all in Browser\" style={{cursor: 'pointer', backgroundColor: '#ddd'}}>\n                      <ListItemText disableTypography primary={<Typography style={{fontSize: 18, fontWeight: 'bold'}}>{cropText(group.name, 25)}</Typography>} onClick={() => this.openGroupBrowser(group)} style={{paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0}}/>\n                      <ListItemSecondaryAction>\n                        <IconButton color=\"inherit\" title=\"Edit Element\">\n                          <Edit/>\n                        </IconButton>\n                        <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this group?')) this.deleteGroup(group)}}>\n                          <Delete/>\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListSubheader>\n                    {group.userAgents.length > 0 ? (\n                      <List>\n                        {group.userAgents.map((device: any, deviceIndex: number) => (\n                          <ListItem key={deviceIndex} dense button onClick={() => this.openDeviceBrowser(device)} title=\"Open in Browser\">\n                            <ListItemText style={{paddingRight: 48}} primary={device.name} secondary={`Width ${device.width}px Height ${device.height}px`}/>\n                            <ListItemSecondaryAction>\n                              <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(device)}>\n                                <Edit/>\n                              </IconButton>\n                              <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteDevice(group, device)}}>\n                                <Delete/>\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))}\n                      </List>\n                    ) : null}\n                  </ul>\n                </li>))}\n            </List>\n          ) : null}\n        </main>\n\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <DialogTitle>\n              Device\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a ...\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.device.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"UserAgent\" name=\"userAgent\" value={this.state.device.userAgent || ''} autoFocus fullWidth multiline rows={3} required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"Width\" name=\"width\" value={this.state.device.width || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField type=\"text\" label=\"Height\" name=\"height\" value={this.state.device.height || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.closeDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Route } from 'react-router-dom'\nimport Footer from \"../components/Footer\";\n\nimport Home from '../pages/Home'\nimport Texts from '../pages/Texts'\nimport Devices from '../pages/Devices'\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/texts\" component={Texts} exact={true}/>\n        <Route path=\"/devices\" component={Devices} exact={true}/>\n\n        <Footer/>\n\n      </Router>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './global/App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}