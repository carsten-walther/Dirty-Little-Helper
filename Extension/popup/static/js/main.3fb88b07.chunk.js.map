{"version":3,"sources":["services/Storage.js","services/ValidatorService.js","components/Icons/Logo.js","components/Header.js","pages/Tools.js","components/Icons/A11y.js","components/Icons/Tool.js","components/Icons/Tota11y.js","components/Icons/Grid.js","pages/Debug.js","services/TextService.js","utilities/Utilities.js","pages/Texts.js","services/DeviceService.js","pages/Devices.js","components/Footer.js","App.js","index.js"],"names":["storage","window","localStorage","set","key","value","Promise","resolve","reject","setItem","JSON","stringify","err","get","item","getItem","parse","undefined","ValidatorService","validators","storageKey","a","this","length","id","find","validator","Math","max","map","parseInt","push","toString","name","url","save","index","indexOf","splice","Logo","width","props","height","viewBox","style","className","fill","x","y","rx","transform","stroke","d","React","Component","Header","AppBar","position","top","bottom","Toolbar","container","justifyContent","backTo","IconButton","edge","color","component","to","ChevronLeft","Typography","variant","whiteSpace","title","children","Tools","state","columnMenuOpen","column","anchorEl","load","setState","chrome","tabs","query","active","currentWindow","create","List","subheader","backgroundColor","padding","ListSubheader","ListItemText","disableTypography","primary","fontSize","fontWeight","paddingTop","paddingBottom","paddingRight","margin","ListItem","button","onClick","validate","bind","Launch","A11y","Tool","Grid","Texts","actionGroups","actions","icon","description","fn","params","language","level","columns","type","tag","attribute","sendMessage","function","actionGroup","action","handleToggle","ListItemAvatar","Avatar","secondary","TextService","texts","text","content","cropText","str","chars","substring","openPopupWindow","windowWidth","windowHeight","userAgent","left","round","screen","windows","focused","info","webRequest","onBeforeSendHeaders","addListener","details","i","requestHeaders","urls","windowId","insertCSS","runAt","code","Transition","forwardRef","ref","Slide","direction","dialogOpen","insertText","openNewDialog","openEditDialog","closeDialog","handleChange","handleSubmit","handleDelete","event","target","update","preventDefault","delete","Add","dense","ListItemSecondaryAction","Edit","confirm","Delete","Dialog","open","onClose","TransitionComponent","keepMounted","noValidate","autoComplete","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","label","autoFocus","fullWidth","required","onChange","multiline","rows","DialogActions","Button","DeviceService","devices","device","Devices","groupDialogOpen","deviceDialogOpen","group","userAgents","openDialog","handleGroupChange","handleGroupSubmit","handleDeviceChange","handleDeviceSubmit","which","forEach","indexGroup","indexDevice","groupIndex","cursor","openGroupBrowser","deleteGroup","deviceIndex","openDeviceBrowser","deleteDevice","select","MenuItem","Footer","BottomNavigation","showLabels","BottomNavigationAction","Flip","Apps","Message","theme","createTheme","typography","htmlFontSize","fontFamily","join","palette","light","main","dark","contrastText","MuiButtonBase","disableRipple","App","ThemeProvider","from","path","Debug","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb88b07.chunk.js","sourcesContent":["const storage = window.localStorage\n\nexport function set (key, value) {\n    return new Promise((resolve, reject) => {\n        try {\n            storage && storage.setItem(key, JSON.stringify(value))\n            resolve()\n        } catch (err) {\n            reject(`Couldn't store object ${err}`)\n        }\n    })\n}\n\nexport function remove (key) {\n    return new Promise((resolve, reject) => {\n        try {\n            storage && storage.removeItem(key)\n            resolve()\n        } catch (err) {\n            reject(`Couldn't remove object ${err}`)\n        }\n    })\n}\n\nexport function get (key) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (storage) {\n                const item = storage.getItem(key)\n                if (item != null) {\n                    resolve(JSON.parse(item))\n                }\n            }\n            resolve(undefined)\n        } catch (err) {\n            reject(`Couldn't get object: ${err}`)\n        }\n    })\n}\n","import { get, set } from './Storage'\n\nclass ValidatorServiceController {\n\n    validators = []\n    storageKey = 'validators'\n\n    async load () {\n        if (this.validators.length > 0) {\n            return this.validators\n        } else {\n            this.validators = (await get(this.storageKey)) || []\n            return this.validators\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.validators)\n    }\n\n    get (id) {\n        return this.validators.find(validator => validator.id === id)\n    }\n\n    create (validator) {\n        let id = Math.max(...this.validators.map(validator => parseInt(validator.id)), 0) + 1\n        this.validators.push({\n            id: id.toString(),\n            name: validator.name,\n            url: validator.url,\n        })\n        this.save()\n    }\n\n    update (id, validator) {\n        let index = this.validators.indexOf(this.get(id))\n        this.validators[index] = validator\n        this.save()\n    }\n\n    delete (validator) {\n        let index = this.validators.indexOf(validator)\n        if (index > -1) {\n            this.validators.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const ValidatorService = new ValidatorServiceController()\n","import React from 'react'\n\nexport default class Logo extends React.Component {\n    render () {\n        return (\n            <svg width={this.props.width ?? 256} height={this.props.height ?? 256} viewBox=\"0 0 256 256\" style={this.props.style} className={this.props.className}>\n                <rect fill=\"#1E61D9\" x=\"0\" y=\"0\" width=\"256\" height=\"256\" rx=\"128\"/>\n                <g transform=\"translate(28.000000, 28.000000)\" fill=\"#FFFFFF\">\n                    <path stroke=\"#3f51b5\"\n                          d=\"M189.032845,78.2833333 L173.365528,76.2916667 C172.073808,72.3166667 170.482075,68.4833333 168.623665,64.8416667 L178.299066,52.3833333 C182.215896,47.3416667 181.757543,40.225 177.282358,35.8916667 L164.156813,22.7666667 C159.781631,18.25 152.664669,17.8 147.61446,21.7083333 L135.172277,31.3833333 C131.530459,29.525 127.696966,27.9333333 123.713468,26.6416667 L121.721718,11 C120.971687,4.725 115.646466,0 109.337871,0 L90.6704297,0 C84.3618345,0 79.0366135,4.725 78.2865824,10.975 L76.2948331,26.6416667 C72.3113344,27.9333333 68.477842,29.5166667 64.8360242,31.3833333 L52.3855074,21.7083333 C47.3519652,17.8 40.2350032,18.25 35.8931563,22.725 L22.7676116,35.8416667 C18.2507574,40.225 17.7924051,47.3416667 21.7092343,52.3916667 L31.3846359,64.8416667 C29.5178917,68.4833333 27.9344927,72.3166667 26.6427724,76.2916667 L11.0004565,78.2833333 C4.72519611,79.0333333 0,84.3583333 0,90.6666667 L0,109.333333 C0,115.641667 4.72519611,120.966667 10.9754555,121.716667 L26.6427724,123.708333 C27.9344927,127.683333 29.5262254,131.516667 31.3846359,135.158333 L21.7092343,147.616667 C17.7924051,152.658333 18.2507574,159.775 22.7259432,164.108333 L35.8514879,177.233333 C40.2350032,181.741667 47.3436315,182.191667 52.3938411,178.283333 L64.8443578,168.608333 C68.4861756,170.475 72.3196681,172.066667 76.2948331,173.35 L78.2865824,188.983333 C79.0366135,195.275 84.3618345,200 90.6704297,200 L109.337871,200 C115.646466,200 120.971687,195.275 121.721718,189.025 L123.713468,173.358333 C127.688633,172.066667 131.522125,170.475 135.163943,168.616667 L147.622793,178.291667 C152.664669,182.208333 159.781631,181.75 164.115144,177.275 L177.240689,164.15 C181.757543,159.766667 182.215896,152.658333 178.299066,147.608333 L168.623665,135.158333 C170.490409,131.516667 172.082142,127.683333 173.365528,123.708333 L188.999511,121.716667 C195.274771,120.966667 199.999978,115.641667 199.999978,109.333333 L199.999978,90.6666667 C200.008301,84.3583333 195.283105,79.0333333 189.032845,78.2833333 Z M100.00415,141.666667 C77.0281968,141.666667 58.3357544,122.975 58.3357544,100 C58.3357544,77.025 77.0281968,58.3333333 100.00415,58.3333333 C122.980104,58.3333333 141.672546,77.025 141.672546,100 C141.672546,122.975 122.980104,141.666667 100.00415,141.666667 Z\"/>\n                </g>\n            </svg>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Grid, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport { ChevronLeft } from '@material-ui/icons'\n\nimport LogoIcon from '../components/Icons/Logo'\n\nexport default class Header extends React.Component {\n    render () {\n        return (\n            <AppBar position=\"fixed\" style={{ top: 0, bottom: 'auto' }}>\n                <Toolbar>\n                    <Grid container justifyContent=\"flex-start\">\n                        {this.props.backTo && (\n                            <IconButton edge=\"start\" color=\"inherit\" component={props => <Link {...props} to={this.props.backTo}/>}>\n                                <ChevronLeft/>\n                            </IconButton>\n                        )}\n                        <Typography variant=\"h6\" style={{ position: 'relative', top: -2, whiteSpace: 'nowrap' }}>\n                            <LogoIcon width={24} height={24} style={{ position: 'relative', top: 5 }}/> {this.props.title}\n                        </Typography>\n                    </Grid>\n                    <Grid container justifyContent=\"flex-end\">\n                        {this.props.children ?? this.props.children}\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, ListItemText, ListSubheader, Typography } from '@material-ui/core'\nimport { Launch } from '@material-ui/icons'\n\nimport { ValidatorService } from '../services/ValidatorService'\nimport Header from '../components/Header'\n\nexport default class Tools extends React.Component {\n\n    state = {\n        validators: [],\n        columnMenuOpen: false,\n        column: 12,\n        anchorEl: null,\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            validators: [],\n            columnMenuOpen: false,\n            column: 12,\n            anchorEl: null,\n        }\n    }\n\n    async componentDidMount () {\n        this.setState({\n            validators: [...(await ValidatorService.load())],\n        })\n    }\n\n    validate (url) {\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n        }, tabs => {\n            chrome.tabs.create({\n                url: url + tabs[0].url\n            })\n        })\n    }\n\n    render () {\n        return (\n            <>\n                <Header title=\"Tools\"/>\n                <main>\n                    <List subheader={<li/>} style={{ backgroundColor: 'inherit' }}>\n                        {this.state.validators.length > 0 ? (\n                            <li style={{ backgroundColor: 'inherit' }}>\n                                <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                    <ListSubheader style={{ backgroundColor: '#ddd' }}>\n                                        <ListItemText disableTypography primary={\n                                            <Typography style={{ fontSize: 16, fontWeight: 'bold' }}>\n                                                Validators\n                                            </Typography>\n                                        } style={{ paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0 }}/>\n                                    </ListSubheader>\n                                    <List>\n                                        {this.state.validators.map((validator, index) => (\n                                            <ListItem key={index} button onClick={this.validate.bind(this, validator.url)}>\n                                                <ListItemText>{validator.name}</ListItemText>\n                                                <Launch/>\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ul>\n                            </li>\n                        ) : null}\n                    </List>\n                </main>\n            </>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class A11y extends React.Component {\n    render () {\n        return (\n            <svg width={this.props.width ?? 24} height={this.props.height ?? 24} viewBox=\"0 0 24 24\" style={this.props.style} className={this.props.className}>\n                <path fill=\"currentColor\" d=\"M 10.333 2.044 C 10.423 1.48 10.769 0.989 11.27 0.714 C 11.803 0.459 12.439 0.573 12.851 0.997 C 13.178 1.29 13.373 1.703 13.39 2.142 C 13.39 3.015 13.407 14.168 13.39 14.802 C 13.391 15.186 13.277 15.563 13.062 15.882 C 12.727 16.354 12.148 16.587 11.58 16.48 C 10.838 16.321 10.351 15.602 10.329 14.867 C 10.307 14.131 10.327 2.068 10.333 2.044 Z M 0.358 17.603 C 1.47 16.788 2.539 15.919 3.662 15.12 C 2.921 14.524 2.191 13.912 1.407 13.38 C 0.736 12.925 -0.101 12.387 0.11 11.45 C 0.182 11.07 0.45 10.758 0.814 10.629 C 1.216 10.53 1.642 10.627 1.961 10.89 C 2.374 11.205 6.201 14.172 6.449 14.524 C 6.689 14.84 6.735 15.263 6.566 15.623 C 6.342 15.996 6.022 16.302 5.639 16.51 C 4.829 17.01 2.456 18.889 2.018 19.227 C 1.663 19.518 1.197 19.637 0.745 19.549 C 0.325 19.432 0.026 19.059 0.004 18.622 C -0.013 18.4 0.024 18.176 0.11 17.97 C 0.167 17.832 0.251 17.707 0.358 17.603 Z M 23.785 17.753 C 24.189 18.359 24.02 19.212 23.309 19.49 C 22.518 19.799 21.826 19.102 21.258 18.674 C 20.552 18.15 19.859 17.613 19.154 17.086 C 18.836 16.847 18.51 16.627 18.182 16.399 C 17.859 16.2 17.593 15.923 17.407 15.593 C 17.266 15.266 17.295 14.891 17.485 14.59 C 17.67 14.277 21.889 10.909 22.236 10.746 C 22.548 10.575 22.919 10.544 23.255 10.662 C 23.573 10.801 23.808 11.081 23.891 11.418 C 24.13 12.358 23.277 12.917 22.606 13.369 C 22.221 13.631 20.715 14.817 20.333 15.126 C 20.967 15.558 23.413 17.438 23.568 17.555 C 23.637 17.627 23.712 17.692 23.792 17.752 Z M 13.885 21.38 C 13.885 22.949 12.186 23.929 10.827 23.145 C 9.469 22.36 9.469 20.399 10.827 19.614 C 11.137 19.436 11.489 19.341 11.846 19.341 C 12.972 19.341 13.885 20.254 13.885 21.38 Z\"/>\n            </svg>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class Tool extends React.Component {\n    render () {\n        return (\n            <svg width={this.props.width ?? 24} height={this.props.height ?? 24} viewBox=\"0 0 24 24\" style={this.props.style} className={this.props.className}>\n                <path fill=\"currentColor\" d=\"M12.09 2.91C10.08.9 7.07.49 4.65 1.67L8.28 5.3c.39.39.39 1.02 0 1.41L6.69 8.3c-.39.4-1.02.4-1.41 0L1.65 4.67C.48 7.1.89 10.09 2.9 12.1c1.86 1.86 4.58 2.35 6.89 1.48l7.96 7.96c1.03 1.03 2.69 1.03 3.71 0 1.03-1.03 1.03-2.69 0-3.71L13.54 9.9c.92-2.34.44-5.1-1.45-6.99z\"/>\n            </svg>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class A11y extends React.Component {\n    render () {\n        return (\n            <svg width={this.props.width ?? 24} height={this.props.height ?? 24} viewBox=\"0 0 100 100\" style={this.props.style} className={this.props.className}>\n                <path fill=\"currentColor\" d=\"M74.466,35.24c-1.069-0.19-2.208-0.267-3.228-0.562c-0.639-0.184-1.348-0.622-1.965-1.075  c-1.246-0.919-2.479-1.557-3.928-2.152c-0.671-0.276-1.617-0.698-2.432-0.608c-0.582,0.064-1.196,0.664-1.73,1.029  c-1.196,0.818-2.186,1.442-3.32,2.198c-0.524,0.35-1.308,0.798-1.543,1.263c-0.142,0.279-0.13,0.736-0.281,1.029  c-0.35,0.679-1.069,1.434-1.777,1.403c-0.835-0.038-1.773-1.518-1.449-2.619c0.177-0.602,1.126-0.902,1.776-1.262  c2.041-1.134,3.803-2.3,5.52-3.602c1.106-0.841,2.579-1.471,4.536-1.542c1.889-0.071,4.45-0.083,6.22,0  c1.465,0.066,2.698,0.164,3.976,0.42c7.308,1.469,14.698,2.788,21.607,4.77c0.739,0.213,2.896,0.613,3.086,1.311  c0.121,0.439-0.236,1.435-0.375,2.151c-0.165,0.865-0.292,1.626-0.42,2.246c-0.12,0.574-0.65,1.174-0.936,1.776  c-0.842,1.778-1.379,3.821-2.104,5.753c-0.954,2.545-2.02,4.859-3.554,6.968c-1.46,2.005-3.442,3.33-5.987,4.536  c-1.128,0.534-2.43,1.083-3.835,1.403c-1.355,0.311-3.263,0.63-4.817,0.28c-2.233-0.501-3.081-2.543-3.882-4.536  c-0.848-2.115-1.351-4.049-1.636-6.827c-2.692,0.176-3.259,2.014-4.163,3.928c-0.384,0.812-0.792,1.623-1.168,2.385  c-1.542,3.115-3.197,6.47-5.473,8.746c-1.215,1.213-2.581,2.03-4.35,2.758c-3.331,1.373-6.847,2.569-10.757,3.462  c-3.598,0.821-8.923,1.642-12.252-0.093c-2.136-1.113-3.105-3.939-4.023-6.268c-0.458-1.159-0.835-2.459-1.262-3.882  c-0.378-1.259-0.708-2.778-1.543-3.602c-1.053-1.037-2.78-1.414-3.227-2.993c-0.815-0.307-1.563-0.821-2.292-1.308  c-4.349-2.915-8.693-5.774-13.141-8.606c-0.727-0.462-1.667-0.958-2.151-1.497c-0.712-0.792-1.108-2.117-1.684-3.133  c-0.265-0.469-0.588-0.92-0.888-1.357c-0.275-0.4-0.536-0.997-1.076-1.076C2.223,36.823,2.365,37.469,2.349,38  c-0.017,0.549-0.077,1.172-0.047,1.823c0.028,0.606,0.297,1.049,0.28,1.544c-0.018,0.515-0.291,1.036-0.841,1.029  c-0.727-0.009-0.8-0.98-0.983-1.686c-0.209-0.807-0.483-1.551-0.421-2.245c0.049-0.531,0.341-1.223,0.468-2.057  c0.246-1.599,0.126-3.078,1.451-3.415C3.004,32.804,4,33.38,4.781,33.649c0.789,0.272,1.597,0.428,2.339,0.702  c0.854,0.316,1.706,0.875,2.524,1.355c2.526,1.484,4.626,3.112,7.062,4.63c3.273,2.041,6.545,3.955,9.307,6.267  c7.434-2.179,16.722-3.566,25.863-4.302c4.176-0.337,8.326-0.174,12.253,0.374c5.624,0.787,10.073-1.58,13.844-3.18  c2.035-0.864,4.078-1.653,6.173-2.573C80.804,36.331,77.705,35.814,74.466,35.24z M93.968,39.729  c-1.838-0.388-3.732-0.737-5.471-1.075c-0.059-0.012-0.127-0.067-0.188-0.046c-1.143,0.392-2.279,0.613-3.367,1.029  c-2.033,0.773-4.015,1.775-5.752,3.039C78.33,43.3,77.372,44,76.897,44.733c-1.609,2.489-1.206,7.214-0.467,10.149  c0.27,1.071,0.411,1.79,0.889,2.666c3.022,1.287,6.88-0.183,8.885-1.684c1.526-1.142,2.676-2.75,3.602-4.35  C91.815,48.042,93.102,43.946,93.968,39.729z M64.878,46.089c-6.121-1.937-14.865-0.822-21.232,0.467  c-4.477,0.907-9.474,1.92-10.944,5.753c-0.801,2.086-1.009,5.098-0.701,7.903c0.284,2.599,1.076,4.892,2.011,6.594  c2.943,2.698,10.038,1.581,14.124,0.375c2.523-0.745,4.112-1.389,5.845-2.197c1.973-0.921,4.636-1.939,5.285-4.116  c0.179-0.597,0.115-1.244,0.188-1.824c0.492-3.909,1.942-7.447,4.303-9.634c0.477-0.441,1.146-0.679,1.357-1.262  C65.37,47.428,65.13,46.709,64.878,46.089z\"/>\n            </svg>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class Grid extends React.Component {\n    render () {\n        return (\n            <svg width={this.props.width ?? 24} height={this.props.height ?? 24} viewBox=\"0 0 24 24\" style={this.props.style} className={this.props.className}>\n                <path fill=\"currentColor\" d=\"M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z\"/>\n            </svg>\n        )\n    }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, Typography } from '@material-ui/core'\n\nimport Header from '../components/Header'\n\nimport A11yIcon from '../components/Icons/A11y'\nimport ToolIcon from '../components/Icons/Tool'\nimport Tota11yIcon from '../components/Icons/Tota11y'\nimport GridIcon from '../components/Icons/Grid'\n\nexport default class Texts extends React.Component {\n\n    actionGroups = [\n        {\n            name: 'Accessibility with A11y',\n            active: false,\n            actions: [\n                {\n                    icon: <A11yIcon/>,\n                    name: 'Advices',\n                    description: 'Outline errors, warnings, obsoletes, advices',\n                    active: true,\n                    fn: 'toggleA11y',\n                    params: {\n                        language: 'en',\n                        level: 'advice'\n                    }\n                }, {\n                    icon: <A11yIcon/>,\n                    name: 'Obsoletes',\n                    description: 'Outline errors, warnings and obsoletes',\n                    active: true,\n                    fn: 'toggleA11y',\n                    params: {\n                        language: 'en',\n                        level: 'obsolete'\n                    },\n                }, {\n                    icon: <A11yIcon/>,\n                    name: 'Warnings',\n                    description: 'Outline errors and warnings',\n                    active: true,\n                    fn: 'toggleA11y',\n                    params: {\n                        language: 'en',\n                        level: 'warning'\n                    },\n                }, {\n                    icon: <A11yIcon/>,\n                    name: 'Errors',\n                    description: 'Outline errors',\n                    active: true,\n                    fn: 'toggleA11y',\n                    params: {\n                        language: 'en',\n                        level: 'error'\n                    },\n                }\n            ]\n        }, {\n            name: 'Accessibility with Tota11y',\n            active: false,\n            actions: [\n                {\n                    icon: <Tota11yIcon/>,\n                    name: 'Tota11y',\n                    description: 'Start accessibility visualization toolkit',\n                    active: true,\n                    fn: 'toggleTota11y',\n                }\n            ]\n        }, {\n            name: 'Grid',\n            active: true,\n            actions: [\n                {\n                    icon: <GridIcon/>,\n                    name: 'Show grid',\n                    description: 'Draws the CSS framework grid',\n                    active: true,\n                    fn: 'toggleGrid',\n                    params: {\n                        columns: 12\n                    }\n                }\n            ]\n        }, {\n            name: 'Content Debugging',\n            active: false,\n            actions: [\n                {\n                    name: 'Editing',\n                    description: 'Start content editing and spell checking',\n                    active: true,\n                    fn: 'toggleContentEdit',\n                }, {\n                    name: 'Readability',\n                    description: 'Check readability of sentences using the automated readybility index',\n                    active: true,\n                    fn: 'toggleReadability',\n                }, {\n                    name: 'Content Chaos Test',\n                    description: 'Randomly half, double or triple text to check if your layout doesn\\'t break',\n                    active: true,\n                    fn: 'toggleContentChaos',\n                }\n            ]\n        }, {\n            name: 'Outlines',\n            active: false,\n            actions: [\n                {\n                    name: 'Layout',\n                    description: 'Draw boxes around all elements',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'layout'\n                    },\n                }, {\n                    name: 'Focus',\n                    description: 'Draw boxes around focus elements',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'focus'\n                    },\n                }, {\n                    name: 'Headings',\n                    description: 'Draw boxes around all headings',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'headings',\n                        tag: 'h1, h2, h3, h4, h5, h6'\n                    },\n                }, {\n                    name: 'Image alternative attributes',\n                    description: 'Draw boxes around images with missing alt attribute',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'images',\n                        tag: 'img',\n                        attribute: 'alt'\n                    },\n                }, {\n                    name: 'Anchor title attributes',\n                    description: 'Draw boxes around anchors with missing title attribute',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'anchors',\n                        tag: 'a',\n                        attribute: 'title'\n                    },\n                }, {\n                    name: 'Button title attributes',\n                    description: 'Draw boxes around buttons with missing title attribute',\n                    active: true,\n                    fn: 'toggleOutline',\n                    params: {\n                        type: 'buttons',\n                        tag: 'button',\n                        attribute: 'title'\n                    },\n                }, {\n                    name: 'Show Z-Index',\n                    description: 'Highlight all elements with a z-index',\n                    active: true,\n                    fn: 'toggleZIndex',\n                }\n            ]\n        }\n    ]\n\n    handleToggle (fn, params) {\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n        }, tabs => {\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: fn,\n                params: params ? JSON.stringify(params) : null\n            })\n        })\n    }\n\n    render () {\n        return (\n            <>\n                <Header title=\"Debug\"/>\n                <main>\n                    <List subheader={<li/>} style={{ backgroundColor: 'inherit', padding: 0 }}>\n                        {(this.actionGroups !== undefined || this.actionGroups > 0) && this.actionGroups.map((actionGroup, index) => actionGroup.active && (\n                            <li key={index} style={{ backgroundColor: 'inherit' }}>\n                                <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                    <ListSubheader style={{ backgroundColor: '#ddd' }}>\n                                        <ListItemText disableTypography primary={\n                                            <Typography style={{ fontSize: 16, fontWeight: 'bold' }}>\n                                                {actionGroup.name}\n                                            </Typography>\n                                        } style={{ paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0 }}/>\n                                    </ListSubheader>\n                                    <List style={{ padding: 0 }}>\n                                        {actionGroup.actions !== undefined && actionGroup.actions.length > 0 && actionGroup.actions.map((action, index) => action.active && (\n                                            <ListItem key={index} button onClick={this.handleToggle.bind(this, action.fn, action.params)}>\n                                                <ListItemAvatar>\n                                                    <Avatar>\n                                                        {action.icon ? action.icon : (<ToolIcon />)}\n                                                    </Avatar>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={action.name} secondary={action.description}/>\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ul>\n                            </li>\n                        ))}\n                    </List>\n                </main>\n            </>\n        )\n    }\n}\n","import { get, set } from './Storage'\n\nclass TextServiceController {\n\n    texts = []\n    storageKey = 'texts'\n\n    async load () {\n        if (this.texts.length > 0) {\n            return this.texts\n        } else {\n            this.texts = (await get(this.storageKey)) || []\n            return this.texts\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.texts)\n    }\n\n    get (id) {\n        return this.texts.find(text => text.id === id)\n    }\n\n    create (text) {\n        let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n        this.texts.push({\n            id: id.toString(),\n            name: text.name,\n            content: text.content,\n        })\n        this.save()\n    }\n\n    update (id, text) {\n        let index = this.texts.indexOf(this.get(id))\n        this.texts[index] = text\n        this.save()\n    }\n\n    delete (text) {\n        let index = this.texts.indexOf(text)\n        if (index > -1) {\n            this.texts.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const TextService = new TextServiceController()\n","/*global chrome*/\n\n/**\n * cropText\n *\n * @param str\n * @param chars\n */\nexport function cropText (str, chars) {\n    if (!chars) {\n        chars = 30\n    }\n    return str.length > chars ? str.substring(0, chars - 3) + '...' : str\n}\n\n/**\n * openPopupWindow\n *\n * @param windowWidth\n * @param windowHeight\n * @param url\n * @param userAgent\n */\nexport function openPopupWindow (windowWidth, windowHeight, url, userAgent) {\n    let width = windowWidth + 10\n    let height = windowHeight + 28\n    let left = Math.round(window.screen.width / 2 - width / 2)\n    let top = Math.round(window.screen.height / 2 - height / 2)\n    // @ts-ignore\n    chrome.windows.create({\n        url: url,\n        type: 'popup',\n        width: width,\n        height: height,\n        left: left,\n        top: top,\n        focused: !0,\n        // @ts-ignore\n    }, (info) => {\n        addListener(info, userAgent)\n        // @ts-ignore\n        chrome.tabs.insertCSS(info.tabs[0].id, {\n            runAt: 'document_start',\n            code: '::-webkit-scrollbar{width:9px!important;height:9px!important}::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment{height:0;width:0;display:none}::-webkit-scrollbar-track-piece{margin:1px;padding:0;width:6px!important;height:5px!important;background:rgba(255,255,255,0.3)}::-webkit-scrollbar:hover{background:rgba(128,128,128,0.2)}::-webkit-scrollbar-thumb{margin:1px!important;border:2px solid transparent;width:5px!important;background-color:rgba(0,0,0,0.4)!important;z-index:9999;-webkit-border-radius:12px;background-clip:content-box}::-webkit-scrollbar-corner{background:rgba(255,255,255,0.3);border:1px solid transparent}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,0.8)!important;border:2px solid transparent}::-webkit-scrollbar-thumb:active{background-color:rgba(0,0,0,0.6)!important;border:2px solid transparent}',\n        })\n    })\n}\n\n/**\n * addListener\n *\n * @param info\n * @param userAgent\n */\nexport function addListener (info, userAgent) {\n    // @ts-ignore\n    chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n        for (let i = 0; i < details.requestHeaders.length; ++i) {\n            if (details.requestHeaders[i].name === 'User-Agent') {\n                details.requestHeaders[i].value = userAgent\n                break\n            }\n        }\n        return {\n            requestHeaders: details.requestHeaders,\n        }\n    }, {\n        urls: ['<all_urls>'],\n        windowId: info.id,\n    }, [\n        'blocking',\n        'requestHeaders',\n    ])\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Slide, TextField } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport { TextService } from '../services/TextService'\nimport { cropText } from '../utilities/Utilities'\n\nimport Header from '../components/Header'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Texts extends React.Component {\n\n    state = {\n        dialogOpen: false,\n        text: {\n            id: undefined,\n            name: undefined,\n            content: undefined,\n        },\n        texts: [],\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            dialogOpen: false,\n            text: {\n                id: undefined,\n                name: undefined,\n                content: undefined,\n            },\n            texts: [],\n        }\n\n        this.insertText = this.insertText.bind(this)\n        this.openNewDialog = this.openNewDialog.bind(this)\n        this.openEditDialog = this.openEditDialog.bind(this)\n        this.closeDialog = this.closeDialog.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    async componentDidMount () {\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n    }\n\n    insertText (text) {\n        // @ts-ignore\n        chrome.tabs.query({\n            'active': true, 'currentWindow': true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'insertText', text: text.content,\n            })\n        })\n    }\n\n    openNewDialog () {\n        this.setState({\n            text: {\n                id: undefined,\n                name: undefined,\n                content: undefined,\n            },\n            dialogOpen: true,\n        })\n    }\n\n    openEditDialog (text) {\n        this.setState({\n            text: text,\n            dialogOpen: true,\n        })\n    }\n\n    closeDialog () {\n        this.setState({\n            dialogOpen: false,\n        })\n    }\n\n    handleChange (event) {\n        this.setState({\n            text: { ...this.state.text, [event.target.name]: event.target.value },\n        })\n    }\n\n    async handleSubmit (event) {\n        if (typeof this.state.text.id === 'undefined') {\n            TextService.create(this.state.text)\n        } else {\n            TextService.update(this.state.text.id, this.state.text)\n        }\n\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n\n        this.closeDialog()\n\n        event.preventDefault()\n    }\n\n    async handleDelete (text) {\n        let texts = [...(await TextService.load())]\n        let index = texts.indexOf(text)\n\n        if (index > -1) {\n            texts.splice(index, 1)\n        }\n\n        await TextService.delete(text)\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n    }\n\n    render () {\n        return (\n            <>\n\n                <Header title=\"Dummy Texts\">\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n                        <Add/>\n                    </IconButton>\n                </Header>\n\n                <main>\n                    {this.state.texts.length > 0 ? (\n                        <List>\n                            {this.state.texts.map((text, index) => (\n                                <ListItem key={index} dense button onClick={() => this.insertText(text)} title=\"Insert\">\n                                    <ListItemText primary={text.name} secondary={cropText(text.content, 70)} style={{ paddingRight: 48 }}/>\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge=\"start\" color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(text)}>\n                                            <Edit/>\n                                        </IconButton>\n                                        <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.handleDelete(text)}}>\n                                            <Delete/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : null}\n                </main>\n\n                <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                        <DialogTitle>\n                            Text\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter a name and the text, that will be inserted.\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.text.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n                            <TextField label=\"Content\" name=\"content\" value={this.state.text.content || ''} autoFocus fullWidth multiline rows={6} required onChange={this.handleChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.closeDialog} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n            </>\n        )\n    }\n}\n","import { get, set } from './Storage'\n\nclass DeviceServiceController {\n\n    devices = []\n    storageKey = 'devices'\n\n    async load () {\n        if (this.devices.length > 0) {\n            return this.devices\n        } else {\n            this.devices = (await get(this.storageKey)) || []\n            return this.devices\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.devices)\n    }\n\n    get (id) {\n        return this.devices.find(device => device.id === id)\n    }\n\n    create (device) {\n        let id = Math.max(...this.devices.map(device => parseInt(device.id)), 0) + 1\n        this.devices.push({\n            id: id.toString(), name: device.name, content: device.content,\n        })\n        this.save()\n    }\n\n    update (id, device) {\n        let index = this.devices.indexOf(this.get(id))\n        this.devices[index] = device\n        this.save()\n    }\n\n    delete (device) {\n        let index = this.devices.indexOf(device)\n        if (index > -1) {\n            this.devices.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const DeviceService = new DeviceServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { Avatar, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, ListSubheader, MenuItem, Slide, TextField, Typography } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport Header from '../components/Header'\nimport { DeviceService } from '../services/DeviceService'\nimport { cropText, openPopupWindow } from '../utilities/Utilities'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Devices extends React.Component {\n\n    state = {\n        dialogOpen: false,\n        groupDialogOpen: false,\n        deviceDialogOpen: false,\n        group: {\n            id: undefined,\n            name: undefined,\n            userAgents: [],\n        },\n        device: {\n            id: undefined,\n            name: undefined,\n            group: undefined,\n            userAgent: undefined,\n            width: undefined,\n            height: undefined,\n        },\n        devices: [],\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            dialogOpen: false,\n            groupDialogOpen: false,\n            deviceDialogOpen: false,\n            group: {\n                id: undefined,\n                name: undefined,\n                userAgents: [],\n            },\n            device: {\n                id: undefined,\n                name: undefined,\n                group: undefined,\n                userAgent: undefined,\n                width: undefined,\n                height: undefined,\n            },\n            devices: [],\n        }\n\n        this.openDialog = this.openDialog.bind(this)\n        this.openEditDialog = this.openEditDialog.bind(this)\n        this.closeDialog = this.closeDialog.bind(this)\n\n        this.handleGroupChange = this.handleGroupChange.bind(this)\n        this.handleGroupSubmit = this.handleGroupSubmit.bind(this)\n\n        this.handleDeviceChange = this.handleDeviceChange.bind(this)\n        this.handleDeviceSubmit = this.handleDeviceSubmit.bind(this)\n    }\n\n    async componentDidMount () {\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    openDialog (which) {\n        this.setState({\n            group: {},\n            device: {},\n            [which]: true,\n        })\n    }\n\n    openEditDialog (which, item) {\n        this.setState({\n            group: item,\n            device: item,\n            [which]: true,\n        })\n    }\n\n    closeDialog (which) {\n        this.setState({\n            [which]: false,\n        })\n    }\n\n    handleGroupChange (event) {\n        this.setState({\n            group: { ...this.state.group, [event.target.name]: event.target.value },\n        })\n    }\n\n    handleDeviceChange (event) {\n        this.setState({\n            device: { ...this.state.device, [event.target.name]: event.target.value },\n        })\n    }\n\n    async handleGroupSubmit (event) {\n\n        if (typeof this.state.group.id === 'undefined') {\n            DeviceService.create(this.state.group)\n        } else {\n            DeviceService.update(this.state.group.id, this.state.group)\n        }\n\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n\n        this.closeDialog('groupDialogOpen')\n        this.closeDialog('dialogOpen')\n\n        event.preventDefault()\n    }\n\n    async handleDeviceSubmit (event) {\n\n        let group = await DeviceService.get(this.state.device.group)\n\n        let device = this.state.device\n        delete device.group\n\n        if (group.userAgents) {\n            // @ts-ignore\n            device.id = (Math.max(...group.userAgents.map((device) => parseInt(device.id)), 0) + 1).toString()\n        } else {\n            // @ts-ignore\n            device.id = (1).toString()\n            group.userAgents = []\n        }\n\n        group.userAgents.push(device)\n        DeviceService.update(this.state.group.id, this.state.group)\n\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n\n        this.closeDialog('deviceDialogOpen')\n        this.closeDialog('dialogOpen')\n\n        event.preventDefault()\n    }\n\n    openGroupBrowser (group) {\n        group.userAgents.forEach((userAgent) => {\n            // @ts-ignore\n            chrome.tabs.query({\n                active: true, currentWindow: true,\n                // @ts-ignore\n            }, (tabs) => {\n                // @ts-ignore\n                openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n            })\n        })\n    }\n\n    openDeviceBrowser (userAgent) {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true, currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n        })\n    }\n\n    async deleteGroup (group) {\n        // @ts-ignore\n        let indexGroup = this.state.devices.indexOf(group)\n        // @ts-ignore\n        this.state.devices.splice(indexGroup, 1)\n\n        DeviceService.devices = this.state.devices\n\n        await DeviceService.save()\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    async deleteDevice (group, device) {\n        let indexGroup = this.state.devices.indexOf(group)\n        let indexDevice = this.state.devices[indexGroup].userAgents.indexOf(device)\n        this.state.devices[indexGroup].userAgents.splice(indexDevice, 1)\n\n        await DeviceService.save()\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    render () {\n        return (\n            <>\n\n                <Header title=\"Devices\">\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={() => this.openDialog('dialogOpen')}>\n                        <Add/>\n                    </IconButton>\n                </Header>\n\n                <main>\n                    {this.state.devices.length > 0 ? (\n                        <List subheader={<li/>} style={{ backgroundColor: 'inherit' }}>\n                            {this.state.devices.map((group, groupIndex) => (\n                                <li key={`section-${groupIndex}`} style={{ backgroundColor: 'inherit' }}>\n                                    <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                        <ListSubheader title=\"Open all in Browser\" style={{ cursor: 'pointer', backgroundColor: '#ddd' }}>\n                                            <ListItemText disableTypography primary={<Typography style={{ fontSize: 18, fontWeight: 'bold' }}>{cropText(group.name, 25)}</Typography>} onClick={() => this.openGroupBrowser(group)} style={{ paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0 }}/>\n                                            <ListItemSecondaryAction>\n                                                <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('groupDialogOpen', group)}>\n                                                    <Edit/>\n                                                </IconButton>\n                                                <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this group?')) this.deleteGroup(group)}}>\n                                                    <Delete/>\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListSubheader>\n                                        {group.userAgents?.length > 0 ? (\n                                            <List>\n                                                {group.userAgents.map((device, deviceIndex) => (\n                                                    <ListItem key={deviceIndex} dense button onClick={() => this.openDeviceBrowser(device)} title=\"Open in Browser\">\n                                                        <ListItemText style={{ paddingRight: 48 }} primary={device.name} secondary={`Width ${device.width}px Height ${device.height}px`}/>\n                                                        <ListItemSecondaryAction>\n                                                            <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('deviceDialogOpen', device)}>\n                                                                <Edit/>\n                                                            </IconButton>\n                                                            <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteDevice(group, device)}}>\n                                                                <Delete/>\n                                                            </IconButton>\n                                                        </ListItemSecondaryAction>\n                                                    </ListItem>\n                                                ))}\n                                            </List>\n                                        ) : null}\n                                    </ul>\n                                </li>))}\n                        </List>\n                    ) : null}\n                </main>\n\n                <Dialog open={this.state.dialogOpen} onClose={() => this.closeDialog('dialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <DialogTitle>\n                        Add New Element\n                    </DialogTitle>\n                    <List>\n                        <ListItem autoFocus button onClick={() => this.openDialog('groupDialogOpen')}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <Add/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"Add Group\"/>\n                        </ListItem>\n                        {this.state.devices?.length > 0 ? (\n                            <ListItem autoFocus button onClick={() => this.openDialog('deviceDialogOpen')}>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <Add/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Add Device\"/>\n                            </ListItem>\n                        ) : null}\n                    </List>\n                </Dialog>\n\n                <Dialog open={this.state.groupDialogOpen} onClose={() => this.closeDialog('groupDialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleGroupSubmit}>\n                        <DialogTitle>\n                            Group\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter the name of the group\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.group.name || ''} autoFocus fullWidth required onChange={this.handleGroupChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => this.closeDialog('groupDialogOpen')} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n                <Dialog open={this.state.deviceDialogOpen} onClose={() => this.closeDialog('deviceDialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleDeviceSubmit}>\n                        <DialogTitle>\n                            Device\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter the name, user agent and size of the new device.\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.device.name || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                            <TextField select label=\"Group\" name=\"group\" value={this.state.device.group || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}>\n                                {this.state.devices.map((group) => (\n                                    <MenuItem key={group.id} value={group.id}>\n                                        {group.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                            <TextField type=\"text\" label=\"UserAgent\" name=\"userAgent\" value={this.state.device.userAgent || ''} autoFocus fullWidth multiline rows={3} required onChange={this.handleDeviceChange}/>\n                            <TextField type=\"text\" label=\"Width\" name=\"width\" value={this.state.device.width || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                            <TextField type=\"text\" label=\"Height\" name=\"height\" value={this.state.device.height || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => this.closeDialog('deviceDialogOpen')} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { Apps, Devices, Flip, Message } from '@material-ui/icons'\n\nexport default class Footer extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            value: 0\n        }\n    }\n\n    handleChange (event, value) {\n        this.setState({\n            value: value\n        })\n    }\n\n    render () {\n        return (\n            <AppBar position=\"fixed\" style={{ top: 'auto', bottom: 0 }}>\n                <BottomNavigation showLabels value={this.state.value} onChange={this.handleChange.bind(this)}>\n                    <BottomNavigationAction label=\"Debug\" icon={<Flip/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/debug\"/>)}/>\n                    <BottomNavigationAction label=\"Tools\" icon={<Apps/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/tools\"/>)}/>\n                    <BottomNavigationAction label=\"Devices\" icon={<Devices/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/devices\"/>)}/>\n                    <BottomNavigationAction label=\"Texts\" icon={<Message/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/texts\"/>)}/>\n                </BottomNavigation>\n            </AppBar>\n        )\n    }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Redirect, Route } from 'react-router-dom'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport Tools from './pages/Tools'\nimport Debug from './pages/Debug'\nimport Texts from './pages/Texts'\nimport Devices from './pages/Devices'\nimport Footer from './components/Footer'\n\nconst theme = createTheme({\n    typography: {\n        htmlFontSize: 12,\n        fontSize: 10,\n        fontFamily: [\n            'Helvetica',\n            'Helvetica Neue',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            light: '#3572e3',\n            main: '#1E61D9',\n            dark: '#15459d',\n            contrastText: '#ffffff',\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            disableRipple: true,\n        },\n    },\n})\n\nexport default class App extends React.Component {\n    render () {\n        return (\n            <ThemeProvider theme={theme}>\n                <Router>\n                    <Redirect from=\"/\" to=\"/debug\" />\n                    <Route path=\"/debug\" component={Debug} exact/>\n                    <Route path=\"/tools\" component={Tools} exact/>\n                    <Route path=\"/devices\" component={Devices} exact/>\n                    <Route path=\"/texts\" component={Texts} exact/>\n                    <Footer/>\n                </Router>\n            </ThemeProvider>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>, document.getElementById('root'))\n"],"sourceRoot":""}