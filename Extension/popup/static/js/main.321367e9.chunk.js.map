{"version":3,"sources":["services/Storage.ts","services/ValidatorService.ts","assets/icon.svg","components/Header.tsx","pages/Home.tsx","services/TextService.ts","utilities/Utilities.ts","pages/Texts.tsx","services/DeviceService.ts","pages/Devices.tsx","components/Footer.tsx","global/App.tsx","index.tsx"],"names":["storage","window","localStorage","set","key","value","Promise","resolve","reject","setItem","JSON","stringify","err","get","item","getItem","parse","undefined","ValidatorService","validators","storageKey","this","length","id","find","validator","Math","max","map","parseInt","push","toString","name","url","save","index","indexOf","splice","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","stroke","strokeWidth","fill","fillRule","x","y","width","height","rx","transform","d","SvgIcon","_ref","svgRef","title","titleId","props","viewBox","xmlns","xmlnsXlink","ref","ForwardRef","Header","backTo","children","AppBar","position","style","top","bottom","Toolbar","Grid","container","justify","IconButton","edge","color","component","to","ChevronLeft","Typography","variant","whiteSpace","React","Component","Home","actions","func","toggleGridOverlay","params","toggleFocus","toggleOutlines","state","load","setState","chrome","tabs","query","active","currentWindow","sendMessage","function","selector","attribute","create","List","subheader","backgroundColor","padding","ListSubheader","ListItemText","disableTypography","primary","fontSize","fontWeight","paddingTop","paddingBottom","paddingRight","margin","action","ListItem","button","onClick","validate","Launch","TextService","texts","text","content","cropText","str","chars","substring","openPopupWindow","windowWidth","windowHeight","userAgent","left","round","screen","windows","type","focused","info","webRequest","onBeforeSendHeaders","addListener","details","requestHeaders","urls","windowId","insertCSS","runAt","code","Transition","forwardRef","Slide","direction","Texts","dialogOpen","insertText","bind","openNewDialog","openEditDialog","closeDialog","handleChange","handleSubmit","handleDelete","event","update","preventDefault","delete","Add","dense","secondary","ListItemSecondaryAction","Edit","confirm","Delete","Dialog","open","onClose","TransitionComponent","keepMounted","noValidate","autoComplete","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","label","autoFocus","fullWidth","required","onChange","multiline","rows","DialogActions","Button","DeviceService","devices","device","Devices","groupDialogOpen","deviceDialogOpen","group","userAgents","openDialog","handleGroupChange","handleGroupSubmit","handleDeviceChange","handleDeviceSubmit","which","forEach","indexGroup","indexDevice","groupIndex","cursor","openGroupBrowser","deleteGroup","deviceIndex","openDeviceBrowser","deleteDevice","ListItemAvatar","Avatar","select","MenuItem","Footer","BottomNavigation","showLabels","BottomNavigationAction","icon","Apps","Message","theme","createMuiTheme","typography","htmlFontSize","fontFamily","join","palette","light","main","dark","contrastText","MuiButtonBase","disableRipple","App","ThemeProvider","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.321367e9.chunk.js","sourcesContent":["const storage = window.localStorage;\n\nexport function set(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.setItem(key, JSON.stringify(value))\n      resolve()\n    } catch (err) {\n      reject(`Couldn't store object ${err}`)\n    }\n  })\n}\n\nexport function remove(key: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      storage && storage.removeItem(key)\n      resolve()\n    } catch (err) {\n      reject(`Couldn't remove object ${err}`)\n    }\n  })\n}\n\nexport function get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      if (storage) {\n        const item = storage.getItem(key)\n        if (item != null) {\n          resolve(JSON.parse(item))\n        }\n      }\n      resolve(undefined)\n    } catch (err) {\n      reject(`Couldn't get object: ${err}`)\n    }\n  })\n}\n","import { Validator } from '../interfaces/Validator'\nimport { get, set } from './Storage'\n\nclass ValidatorServiceController {\n\n  public validators: Validator[] = []\n  private storageKey: string = 'validators'\n\n  async load(): Promise<Validator[]> {\n    if (this.validators.length > 0) {\n      return this.validators\n    } else {\n      this.validators = (await get(this.storageKey)) || []\n      return this.validators\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.validators)\n  }\n\n  get(id: any): Validator {\n    return this.validators.find(validator => validator.id === id) as Validator\n  }\n\n  create(validator: Validator): void {\n    let id = Math.max(...this.validators.map(validator => parseInt(validator.id)), 0) + 1\n    this.validators.push({\n      id: id.toString(),\n      name: validator.name,\n      url: validator.url\n    })\n    this.save()\n  }\n\n  update(id: any, validator: Validator): void {\n    let index = this.validators.indexOf(this.get(id))\n    this.validators[index] = validator\n    this.save()\n  }\n\n  delete(validator: Validator): void {\n    let index = this.validators.indexOf(validator)\n    if (index > -1) {\n      this.validators.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const ValidatorService = new ValidatorServiceController()\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"icon\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  fill: \"#1E61D9\",\n  x: 0,\n  y: 0,\n  width: 256,\n  height: 256,\n  rx: 128\n}), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"cog\",\n  transform: \"translate(28.000000, 28.000000)\",\n  fill: \"#FFFFFF\",\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M189.032845,78.2833333 L173.365528,76.2916667 C172.073808,72.3166667 170.482075,68.4833333 168.623665,64.8416667 L178.299066,52.3833333 C182.215896,47.3416667 181.757543,40.225 177.282358,35.8916667 L164.156813,22.7666667 C159.781631,18.25 152.664669,17.8 147.61446,21.7083333 L135.172277,31.3833333 C131.530459,29.525 127.696966,27.9333333 123.713468,26.6416667 L121.721718,11 C120.971687,4.725 115.646466,0 109.337871,0 L90.6704297,0 C84.3618345,0 79.0366135,4.725 78.2865824,10.975 L76.2948331,26.6416667 C72.3113344,27.9333333 68.477842,29.5166667 64.8360242,31.3833333 L52.3855074,21.7083333 C47.3519652,17.8 40.2350032,18.25 35.8931563,22.725 L22.7676116,35.8416667 C18.2507574,40.225 17.7924051,47.3416667 21.7092343,52.3916667 L31.3846359,64.8416667 C29.5178917,68.4833333 27.9344927,72.3166667 26.6427724,76.2916667 L11.0004565,78.2833333 C4.72519611,79.0333333 0,84.3583333 0,90.6666667 L0,109.333333 C0,115.641667 4.72519611,120.966667 10.9754555,121.716667 L26.6427724,123.708333 C27.9344927,127.683333 29.5262254,131.516667 31.3846359,135.158333 L21.7092343,147.616667 C17.7924051,152.658333 18.2507574,159.775 22.7259432,164.108333 L35.8514879,177.233333 C40.2350032,181.741667 47.3436315,182.191667 52.3938411,178.283333 L64.8443578,168.608333 C68.4861756,170.475 72.3196681,172.066667 76.2948331,173.35 L78.2865824,188.983333 C79.0366135,195.275 84.3618345,200 90.6704297,200 L109.337871,200 C115.646466,200 120.971687,195.275 121.721718,189.025 L123.713468,173.358333 C127.688633,172.066667 131.522125,170.475 135.163943,168.616667 L147.622793,178.291667 C152.664669,182.208333 159.781631,181.75 164.115144,177.275 L177.240689,164.15 C181.757543,159.766667 182.215896,152.658333 178.299066,147.608333 L168.623665,135.158333 C170.490409,131.516667 172.082142,127.683333 173.365528,123.708333 L188.999511,121.716667 C195.274771,120.966667 199.999978,115.641667 199.999978,109.333333 L199.999978,90.6666667 C200.008301,84.3583333 195.283105,79.0333333 189.032845,78.2833333 Z M100.00415,141.666667 C77.0281968,141.666667 58.3357544,122.975 58.3357544,100 C58.3357544,77.025 77.0281968,58.3333333 100.00415,58.3333333 C122.980104,58.3333333 141.672546,77.025 141.672546,100 C141.672546,122.975 122.980104,141.666667 100.00415,141.666667 Z\",\n  id: \"Shape\"\n}))));\n\nfunction SvgIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"256px\",\n    height: \"256px\",\n    viewBox: \"0 0 256 256\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"icon\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcon);\nexport default __webpack_public_path__ + \"static/media/icon.39a48e0c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Toolbar, Grid, Typography, IconButton } from '@material-ui/core'\nimport { ChevronLeft } from '@material-ui/icons'\n\nimport { ReactComponent as Logo } from './../assets/icon.svg'\n\ninterface HeaderProps {\n  title?: string,\n  backTo?: string|null\n  children?: any|null\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n\n  constructor(props: HeaderProps) {\n    super(props)\n\n    props = {\n      title: '',\n      backTo: null,\n      children: null\n    }\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{ top: 0, bottom: 'auto' }}>\n        <Toolbar>\n          <Grid container justify=\"flex-start\">\n            {this.props.backTo ? (\n              <IconButton edge=\"start\" color=\"inherit\" component={props => <Link {...props} to={this.props.backTo}/>}>\n                <ChevronLeft />\n              </IconButton>\n            ) : null}\n            <Typography variant=\"h6\" style={{ position: 'relative', top: -2, whiteSpace: 'nowrap' }}>\n              <Logo width={24} height={24} style={{ position: 'relative', top: 5 }} /> {this.props.title}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            {this.props.children ? this.props.children : null}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, ListItemText, Typography, ListSubheader } from '@material-ui/core'\nimport { Launch } from '@material-ui/icons'\n\nimport { ValidatorService } from '../services/ValidatorService'\nimport Header from '../components/Header'\n\nexport default class Home extends React.Component {\n\n  actions = [\n    {\n      name: 'Grid Overlay',\n      func: this.toggleGridOverlay,\n      params: []\n    }, {\n      name: 'Outline Focus',\n      func: this.toggleFocus,\n      params: []\n    }, {\n      name: 'Outline Headings',\n      func: this.toggleOutlines,\n      params: ['outlineHeadings']\n    }, {\n      name: 'Outline Image Alternative Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'img', 'alt']\n    }, {\n      name: 'Outline Anchor Title Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'a', 'title']\n    }, {\n      name: 'Outline Button Title Attributes',\n      func: this.toggleOutlines,\n      params: ['outlineElementAttribute', 'button', 'title']\n    }\n  ]\n\n  state = {\n    validators: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      validators: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({\n      validators: [...(await ValidatorService.load())]\n    })\n  }\n\n  toggleGridOverlay() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleGridOverlay'\n      })\n    })\n  }\n\n  toggleFocus() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleFocus'\n      })\n    })\n  }\n\n  toggleOutlines(params: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: params[0],\n        selector: params[1],\n        attribute: params[2]\n      })\n    })\n  }\n\n  validate(url: string) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.create({ url: url + tabs[0].url })\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dirty Little Helper\"/>\n\n        <main>\n          <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n\n            {this.actions.length > 0 ? (\n              <li style={{backgroundColor: 'inherit'}}>\n                <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                  <ListSubheader style={{backgroundColor: '#ddd'}}>\n                    <ListItemText disableTypography primary={\n                      <Typography style={{fontSize: 16, fontWeight: 'bold'}}>\n                        Tools\n                      </Typography>\n                    } style={{paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0}}/>\n                  </ListSubheader>\n                  <List>\n                    {this.actions.map((action: any, index: number) => (\n                      <ListItem key={index} button onClick={() => action.func(action.params)}>\n                        <ListItemText>{action.name}</ListItemText>\n                      </ListItem>\n                    ))}\n                  </List>\n                </ul>\n              </li>\n            ) : null}\n\n            {this.state.validators.length > 0 ? (\n              <li style={{backgroundColor: 'inherit'}}>\n                <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                  <ListSubheader style={{backgroundColor: '#ddd'}}>\n                    <ListItemText disableTypography primary={\n                      <Typography style={{fontSize: 16, fontWeight: 'bold'}}>\n                        Validators\n                      </Typography>\n                    } style={{paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0}}/>\n                  </ListSubheader>\n                  <List>\n                    {this.state.validators.map((validator: any, index: number) => (\n                      <ListItem key={index} button onClick={() => this.validate(validator.url)}>\n                        <ListItemText>{validator.name}</ListItemText>\n                        <Launch/>\n                      </ListItem>\n                    ))}\n                  </List>\n                </ul>\n              </li>\n            ) : null}\n          </List>\n        </main>\n      </>\n    )\n  }\n}\n","import { Text } from '../interfaces/Text'\nimport { get, set } from './Storage'\n\nclass TextServiceController {\n\n  public texts: Text[] = []\n  private storageKey: string = 'texts'\n\n  async load(): Promise<Text[]> {\n    if (this.texts.length > 0) {\n      return this.texts\n    } else {\n      this.texts = (await get(this.storageKey)) || []\n      return this.texts\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.texts)\n  }\n\n  get(id: any): Text {\n    return this.texts.find(text => text.id === id) as Text\n  }\n\n  create(text: Text): void {\n    let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n    this.texts.push({\n      id: id.toString(),\n      name: text.name,\n      content: text.content\n    })\n    this.save()\n  }\n\n  update(id: any, text: Text): void {\n    let index = this.texts.indexOf(this.get(id))\n    this.texts[index] = text\n    this.save()\n  }\n\n  delete(text: Text): void {\n    let index = this.texts.indexOf(text)\n    if (index > -1) {\n      this.texts.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const TextService = new TextServiceController()\n","/*global chrome*/\n\n/**\n * cropText\n *\n * @param str\n * @param chars\n */\nexport function cropText(str: string, chars?: number) {\n  if (!chars) {\n    chars = 30\n  }\n  return str.length > chars ? str.substring(0, chars - 3) + \"...\" : str;\n}\n\n/**\n * openPopupWindow\n *\n * @param windowWidth\n * @param windowHeight\n * @param url\n * @param userAgent\n */\nexport function openPopupWindow(windowWidth: number, windowHeight: number, url: string, userAgent: any) {\n  let width = windowWidth + 10\n  let height = windowHeight + 28\n  let left = Math.round(window.screen.width / 2 - width / 2)\n  let top = Math.round(window.screen.height / 2 - height / 2)\n  // @ts-ignore\n  chrome.windows.create({\n    url: url,\n    type: 'popup',\n    width: width,\n    height: height,\n    left: left,\n    top: top,\n    focused: !0,\n    // @ts-ignore\n  }, (info) => {\n    addListener(info, userAgent)\n    // @ts-ignore\n    chrome.tabs.insertCSS(info.tabs[0].id, {\n      runAt: 'document_start',\n      code: '::-webkit-scrollbar{width:9px!important;height:9px!important}::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment{height:0;width:0;display:none}::-webkit-scrollbar-track-piece{margin:1px;padding:0;width:6px!important;height:5px!important;background:rgba(255,255,255,0.3)}::-webkit-scrollbar:hover{background:rgba(128,128,128,0.2)}::-webkit-scrollbar-thumb{margin:1px!important;border:2px solid transparent;width:5px!important;background-color:rgba(0,0,0,0.4)!important;z-index:9999;-webkit-border-radius:12px;background-clip:content-box}::-webkit-scrollbar-corner{background:rgba(255,255,255,0.3);border:1px solid transparent}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,0.8)!important;border:2px solid transparent}::-webkit-scrollbar-thumb:active{background-color:rgba(0,0,0,0.6)!important;border:2px solid transparent}',\n    })\n  })\n}\n\n/**\n * addListener\n *\n * @param info\n * @param userAgent\n */\nexport function addListener(info: any, userAgent: any) {\n  // @ts-ignore\n  chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n    for (let i = 0; i < details.requestHeaders.length; ++i) {\n      if (details.requestHeaders[i].name === 'User-Agent') {\n        details.requestHeaders[i].value = userAgent\n        break\n      }\n    }\n    return {\n      requestHeaders: details.requestHeaders\n    }\n  }, {\n    urls: ['<all_urls>'],\n    windowId: info.id\n  }, [\n    'blocking',\n    'requestHeaders'\n  ])\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Button, List, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField, Slide } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport { Text } from '../interfaces/Text'\nimport { TextService } from '../services/TextService'\nimport { cropText } from '../utilities/Utilities'\n\nimport Header from '../components/Header'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Texts extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    text: {\n      id: undefined,\n      name: undefined,\n      content: undefined\n    },\n    texts: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      texts: []\n    }\n\n    this.insertText = this.insertText.bind(this)\n    this.openNewDialog = this.openNewDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  insertText(text: Text) {\n    // @ts-ignore\n    chrome.tabs.query({\n      'active': true, 'currentWindow': true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'insertText', text: text.content\n      })\n    })\n  }\n\n  openNewDialog() {\n    this.setState({\n      text: {\n        id: undefined,\n        name: undefined,\n        content: undefined\n      },\n      dialogOpen: true\n    })\n  }\n\n  openEditDialog(text: Text) {\n    this.setState({\n      text: text,\n      dialogOpen: true\n    })\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  handleChange(event: any) {\n    this.setState({\n      text: {...this.state.text, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleSubmit(event: any) {\n    if (typeof this.state.text.id === 'undefined') {\n      TextService.create(this.state.text as unknown as Text)\n    } else {\n      TextService.update(this.state.text.id, this.state.text as unknown as Text)\n    }\n\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n\n    this.closeDialog()\n\n    event.preventDefault()\n  }\n\n  async handleDelete(text: Text) {\n    let texts = [...(await TextService.load())]\n    let index = texts.indexOf(text)\n\n    if (index > -1) {\n      texts.splice(index, 1)\n    }\n\n    await TextService.delete(text)\n    this.setState({\n      texts: [...(await TextService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dummy Texts\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.texts.length > 0 ? (\n            <List>\n              {this.state.texts.map((text: any, index: number) => (\n                <ListItem key={index} dense button onClick={() => this.insertText(text)} title=\"Insert\">\n                  <ListItemText primary={text.name} secondary={cropText(text.content, 70)} style={{paddingRight: 48}}/>\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"start\" color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(text)}>\n                      <Edit/>\n                    </IconButton>\n                    <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.handleDelete(text)}}>\n                      <Delete/>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          ) : null}\n        </main>\n\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <DialogTitle>\n              Text\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a name and the text, that will be inserted.\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.text.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n              <TextField label=\"Content\" name=\"content\" value={this.state.text.content || ''} autoFocus fullWidth multiline rows={6} required onChange={this.handleChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.closeDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import { get, set } from './Storage'\n\nclass DeviceServiceController {\n\n  public devices: any[] = []\n  private storageKey: string = 'devices'\n\n  async load(): Promise<any[]> {\n    if (this.devices.length > 0) {\n      return this.devices\n    } else {\n      this.devices = (await get(this.storageKey)) || []\n      return this.devices\n    }\n  }\n\n  async save(): Promise<void> {\n    return await set(this.storageKey, this.devices)\n  }\n\n  get(id: any): any {\n    return this.devices.find(device => device.id === id) as any\n  }\n\n  create(device: any): void {\n    let id = Math.max(...this.devices.map(device => parseInt(device.id)), 0) + 1\n    this.devices.push({\n      id: id.toString(), name: device.name, content: device.content\n    })\n    this.save()\n  }\n\n  update(id: any, device: any): void {\n    let index = this.devices.indexOf(this.get(id))\n    this.devices[index] = device\n    this.save()\n  }\n\n  delete(device: any): void {\n    let index = this.devices.indexOf(device)\n    if (index > -1) {\n      this.devices.splice(index, 1)\n      this.save()\n    }\n  }\n}\n\nexport const DeviceService = new DeviceServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { IconButton, Typography, List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button, Slide, Avatar, ListItemAvatar, MenuItem } from '@material-ui/core'\nimport { Edit, Delete, Add } from '@material-ui/icons'\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nimport Header from '../components/Header'\nimport { DeviceService } from '../services/DeviceService'\nimport { cropText, openPopupWindow } from '../utilities/Utilities'\n\nconst Transition = React.forwardRef(function Transition(props: TransitionProps & { children?: React.ReactElement<any, any> }, ref: React.Ref<unknown>) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Devices extends React.Component {\n\n  state = {\n    dialogOpen: false,\n    groupDialogOpen: false,\n    deviceDialogOpen: false,\n    group: {\n      id: undefined,\n      name: undefined,\n      userAgents: [],\n    },\n    device: {\n      id: undefined,\n      name: undefined,\n      group: undefined,\n      userAgent: undefined,\n      width: undefined,\n      height: undefined\n    },\n    devices: []\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      dialogOpen: false,\n      groupDialogOpen: false,\n      deviceDialogOpen: false,\n      group: {\n        id: undefined,\n        name: undefined,\n        userAgents: [],\n      },\n      device: {\n        id: undefined,\n        name: undefined,\n        group: undefined,\n        userAgent: undefined,\n        width: undefined,\n        height: undefined\n      },\n      devices: []\n    }\n\n    this.openDialog = this.openDialog.bind(this)\n    this.openEditDialog = this.openEditDialog.bind(this)\n    this.closeDialog = this.closeDialog.bind(this)\n\n    this.handleGroupChange = this.handleGroupChange.bind(this)\n    this.handleGroupSubmit = this.handleGroupSubmit.bind(this)\n\n    this.handleDeviceChange = this.handleDeviceChange.bind(this)\n    this.handleDeviceSubmit = this.handleDeviceSubmit.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  openDialog(which: any) {\n    this.setState({\n      group: {},\n      device: {},\n      [which]: true\n    })\n  }\n\n  openEditDialog(which: any, item: any) {\n    this.setState({\n      group: item,\n      device: item,\n      [which]: true\n    })\n  }\n\n  closeDialog(which: any) {\n    this.setState({\n      [which]: false\n    })\n  }\n\n  handleGroupChange(event: any) {\n    this.setState({\n      group: {...this.state.group, [event.target.name]: event.target.value}\n    })\n  }\n\n  handleDeviceChange(event: any) {\n    this.setState({\n      device: {...this.state.device, [event.target.name]: event.target.value}\n    })\n  }\n\n  async handleGroupSubmit(event: any) {\n\n    if (typeof this.state.group.id === 'undefined') {\n      DeviceService.create(this.state.group)\n    } else {\n      DeviceService.update(this.state.group.id, this.state.group)\n    }\n\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n\n    this.closeDialog('groupDialogOpen')\n    this.closeDialog('dialogOpen')\n\n    event.preventDefault()\n  }\n\n  async handleDeviceSubmit(event: any) {\n\n    let group = await DeviceService.get(this.state.device.group)\n\n    let device = this.state.device\n    delete device.group\n\n    if (group.userAgents) {\n      // @ts-ignore\n      device.id = (Math.max(...group.userAgents.map((device: any) => parseInt(device.id)), 0) + 1).toString()\n    } else {\n      // @ts-ignore\n      device.id = (1).toString()\n      group.userAgents = []\n    }\n\n    group.userAgents.push(device)\n    DeviceService.update(this.state.group.id, this.state.group)\n\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n\n    this.closeDialog('deviceDialogOpen')\n    this.closeDialog('dialogOpen')\n\n    event.preventDefault()\n  }\n\n  openGroupBrowser(group: any) {\n    group.userAgents.forEach((userAgent: any) => {\n      // @ts-ignore\n      chrome.tabs.query({\n        active: true, currentWindow: true\n        // @ts-ignore\n      }, (tabs) => {\n        // @ts-ignore\n        openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n      })\n    })\n  }\n\n  openDeviceBrowser(userAgent: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true, currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n    })\n  }\n\n  async deleteGroup(group: any) {\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    this.state.devices.splice(indexGroup, 1)\n\n    DeviceService.devices = this.state.devices\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  async deleteDevice(group: any, device: any) {\n    // @ts-ignore\n    let indexGroup = this.state.devices.indexOf(group)\n    // @ts-ignore\n    let indexDevice = this.state.devices[indexGroup].userAgents.indexOf(device)\n    // @ts-ignore\n    this.state.devices[indexGroup].userAgents.splice(indexDevice, 1)\n\n    await DeviceService.save()\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Devices\">\n          <IconButton edge=\"end\" color=\"inherit\" onClick={() => this.openDialog('dialogOpen')}>\n            <Add/>\n          </IconButton>\n        </Header>\n\n        <main>\n          {this.state.devices.length > 0 ? (\n            <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n              {this.state.devices.map((group: any, groupIndex: number) => (\n                <li key={`section-${groupIndex}`} style={{backgroundColor: 'inherit'}}>\n                  <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                    <ListSubheader title=\"Open all in Browser\" style={{cursor: 'pointer', backgroundColor: '#ddd'}}>\n                      <ListItemText disableTypography primary={<Typography style={{fontSize: 18, fontWeight: 'bold'}}>{cropText(group.name, 25)}</Typography>} onClick={() => this.openGroupBrowser(group)} style={{paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0}}/>\n                      <ListItemSecondaryAction>\n                        <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('groupDialogOpen', group)}>\n                          <Edit/>\n                        </IconButton>\n                        <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this group?')) this.deleteGroup(group)}}>\n                          <Delete/>\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListSubheader>\n                    {group.userAgents?.length > 0 ? (\n                      <List>\n                        {group.userAgents.map((device: any, deviceIndex: number) => (\n                          <ListItem key={deviceIndex} dense button onClick={() => this.openDeviceBrowser(device)} title=\"Open in Browser\">\n                            <ListItemText style={{paddingRight: 48}} primary={device.name} secondary={`Width ${device.width}px Height ${device.height}px`}/>\n                            <ListItemSecondaryAction>\n                              <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('deviceDialogOpen', device)}>\n                                <Edit/>\n                              </IconButton>\n                              <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteDevice(group, device)}}>\n                                <Delete/>\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))}\n                      </List>\n                    ) : null}\n                  </ul>\n                </li>))}\n            </List>\n          ) : null}\n        </main>\n\n        <Dialog open={this.state.dialogOpen} onClose={() => this.closeDialog('dialogOpen')} TransitionComponent={Transition} keepMounted>\n          <DialogTitle>\n            Add New Element\n          </DialogTitle>\n          <List>\n            <ListItem autoFocus button onClick={() => this.openDialog('groupDialogOpen')}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Add/>\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Add Group\" />\n            </ListItem>\n            {this.state.devices?.length > 0 ? (\n              <ListItem autoFocus button onClick={() => this.openDialog('deviceDialogOpen')}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <Add/>\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Add Device\" />\n              </ListItem>\n            ) : null}\n          </List>\n        </Dialog>\n\n        <Dialog open={this.state.groupDialogOpen} onClose={() => this.closeDialog('groupDialogOpen')} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleGroupSubmit}>\n            <DialogTitle>\n              Group\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter the name of the group\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.group.name || ''} autoFocus fullWidth required onChange={this.handleGroupChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.closeDialog('groupDialogOpen')} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n        <Dialog open={this.state.deviceDialogOpen} onClose={() => this.closeDialog('deviceDialogOpen')} TransitionComponent={Transition} keepMounted>\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleDeviceSubmit}>\n            <DialogTitle>\n              Device\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter the name, user agent and size of the new device.\n              </DialogContentText>\n              <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.device.name || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n              <TextField select label=\"Group\" name=\"group\" value={this.state.device.group || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}>\n                {this.state.devices.map((group: any) => (\n                  <MenuItem key={group.id} value={group.id}>\n                    {group.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField type=\"text\" label=\"UserAgent\" name=\"userAgent\" value={this.state.device.userAgent || ''} autoFocus fullWidth multiline rows={3} required onChange={this.handleDeviceChange}/>\n              <TextField type=\"text\" label=\"Width\" name=\"width\" value={this.state.device.width || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n              <TextField type=\"text\" label=\"Height\" name=\"height\" value={this.state.device.height || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.closeDialog('deviceDialogOpen')} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\" autoFocus>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { Apps, Devices, Message } from '@material-ui/icons'\n\nexport default class Footer extends React.Component {\n\n  state = {\n    value: 0\n  }\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      value: 0\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event: any, value: any) {\n    this.setState({\n      value: value\n    })\n  }\n\n  render() {\n    return (\n      <AppBar position=\"fixed\" style={{top: 'auto', bottom: 0}}>\n        <BottomNavigation showLabels value={this.state.value} onChange={(event, value) => this.handleChange(event, value)}>\n          <BottomNavigationAction label=\"Tools\" icon={<Apps />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/\"/>)}/>\n          <BottomNavigationAction label=\"Devices\" icon={<Devices />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/devices\"/>)}/>\n          <BottomNavigationAction label=\"Texts\" icon={<Message />} component={React.forwardRef((props, ref) => <Link {...props} to=\"/texts\"/>)}/>\n        </BottomNavigation>\n      </AppBar>\n    )\n  }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Route } from 'react-router-dom'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport Home from '../pages/Home'\nimport Texts from '../pages/Texts'\nimport Devices from '../pages/Devices'\nimport Footer from '../components/Footer'\n\nconst theme = createMuiTheme({\n  typography: {\n    htmlFontSize: 12,\n    fontSize: 10,\n    fontFamily: [\n      '-apple-system',\n      'Roboto',\n      'Helvetica',\n      'Arial',\n      'sans-serif'\n    ].join(',')\n  },\n  palette: {\n    primary: {\n      light: '#3572e3',\n      main: '#1E61D9',\n      dark: '#15459d',\n      contrastText: '#fff'\n    }\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  }\n})\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Route path=\"/\" component={Home} exact={true}/>\n          <Route path=\"/texts\" component={Texts} exact={true}/>\n          <Route path=\"/devices\" component={Devices} exact={true}/>\n          <Footer/>\n        </Router>\n      </ThemeProvider>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './global/App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}