{"version":3,"sources":["services/Storage.js","assets/icon.svg","services/ValidatorService.js","components/Header.js","pages/Home.js","pages/Debug.js","services/TextService.js","utilities/Utilities.js","pages/Texts.js","services/DeviceService.js","pages/Devices.js","components/Footer.js","App.js","index.js"],"names":["storage","window","localStorage","set","key","value","Promise","resolve","reject","setItem","JSON","stringify","err","get","item","getItem","parse","undefined","_rect","_g","ValidatorService","validators","storageKey","a","this","length","id","find","validator","Math","max","map","parseInt","push","toString","name","url","save","index","indexOf","splice","_excluded","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","fill","x","y","rx","transform","stroke","d","ForwardRef","Header","AppBar","position","style","top","bottom","Toolbar","Grid","container","justifyContent","backTo","IconButton","edge","color","component","to","ChevronLeft","Typography","variant","whiteSpace","children","React","Component","Home","actions","func","toggleGridOverlay","params","toggleFocus","toggleOutlines","columns","state","columnMenuOpen","column","anchorEl","toggleMenu","bind","setColumn","load","setState","chrome","tabs","query","active","currentWindow","sendMessage","function","selector","attribute","create","menu","event","currentTarget","console","log","List","subheader","backgroundColor","padding","ListSubheader","ListItemText","disableTypography","primary","fontSize","fontWeight","paddingTop","paddingBottom","paddingRight","margin","action","ListItem","button","onClick","validate","Launch","Texts","toggleA11y","toggleTota11y","TextService","texts","text","content","cropText","str","chars","substring","openPopupWindow","windowWidth","windowHeight","userAgent","left","round","screen","windows","type","focused","info","webRequest","onBeforeSendHeaders","addListener","details","requestHeaders","urls","windowId","insertCSS","runAt","code","Transition","forwardRef","Slide","direction","dialogOpen","insertText","openNewDialog","openEditDialog","closeDialog","handleChange","handleSubmit","handleDelete","update","preventDefault","delete","Add","dense","secondary","ListItemSecondaryAction","Edit","confirm","Delete","Dialog","open","onClose","TransitionComponent","keepMounted","noValidate","autoComplete","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","label","autoFocus","fullWidth","required","onChange","multiline","rows","DialogActions","Button","DeviceService","devices","device","Devices","groupDialogOpen","deviceDialogOpen","group","userAgents","openDialog","handleGroupChange","handleGroupSubmit","handleDeviceChange","handleDeviceSubmit","which","forEach","indexGroup","indexDevice","groupIndex","cursor","openGroupBrowser","deleteGroup","deviceIndex","openDeviceBrowser","deleteDevice","ListItemAvatar","Avatar","select","MenuItem","Footer","BottomNavigation","showLabels","BottomNavigationAction","icon","Apps","Flip","Message","theme","createTheme","typography","htmlFontSize","fontFamily","join","palette","light","main","dark","contrastText","MuiButtonBase","disableRipple","App","ThemeProvider","path","exact","Debug","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.360bec2a.chunk.js","sourcesContent":["const storage = window.localStorage\n\nexport function set (key, value) {\n    return new Promise((resolve, reject) => {\n        try {\n            storage && storage.setItem(key, JSON.stringify(value))\n            resolve()\n        } catch (err) {\n            reject(`Couldn't store object ${err}`)\n        }\n    })\n}\n\nexport function remove (key) {\n    return new Promise((resolve, reject) => {\n        try {\n            storage && storage.removeItem(key)\n            resolve()\n        } catch (err) {\n            reject(`Couldn't remove object ${err}`)\n        }\n    })\n}\n\nexport function get (key) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (storage) {\n                const item = storage.getItem(key)\n                if (item != null) {\n                    resolve(JSON.parse(item))\n                }\n            }\n            resolve(undefined)\n        } catch (err) {\n            reject(`Couldn't get object: ${err}`)\n        }\n    })\n}\n","var _rect, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"256px\",\n    height: \"256px\",\n    viewBox: \"0 0 256 256\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    fill: \"#1E61D9\",\n    x: 0,\n    y: 0,\n    width: 256,\n    height: 256,\n    rx: 128\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(28.000000, 28.000000)\",\n    fill: \"#FFFFFF\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#3f51b5\",\n    d: \"M189.032845,78.2833333 L173.365528,76.2916667 C172.073808,72.3166667 170.482075,68.4833333 168.623665,64.8416667 L178.299066,52.3833333 C182.215896,47.3416667 181.757543,40.225 177.282358,35.8916667 L164.156813,22.7666667 C159.781631,18.25 152.664669,17.8 147.61446,21.7083333 L135.172277,31.3833333 C131.530459,29.525 127.696966,27.9333333 123.713468,26.6416667 L121.721718,11 C120.971687,4.725 115.646466,0 109.337871,0 L90.6704297,0 C84.3618345,0 79.0366135,4.725 78.2865824,10.975 L76.2948331,26.6416667 C72.3113344,27.9333333 68.477842,29.5166667 64.8360242,31.3833333 L52.3855074,21.7083333 C47.3519652,17.8 40.2350032,18.25 35.8931563,22.725 L22.7676116,35.8416667 C18.2507574,40.225 17.7924051,47.3416667 21.7092343,52.3916667 L31.3846359,64.8416667 C29.5178917,68.4833333 27.9344927,72.3166667 26.6427724,76.2916667 L11.0004565,78.2833333 C4.72519611,79.0333333 0,84.3583333 0,90.6666667 L0,109.333333 C0,115.641667 4.72519611,120.966667 10.9754555,121.716667 L26.6427724,123.708333 C27.9344927,127.683333 29.5262254,131.516667 31.3846359,135.158333 L21.7092343,147.616667 C17.7924051,152.658333 18.2507574,159.775 22.7259432,164.108333 L35.8514879,177.233333 C40.2350032,181.741667 47.3436315,182.191667 52.3938411,178.283333 L64.8443578,168.608333 C68.4861756,170.475 72.3196681,172.066667 76.2948331,173.35 L78.2865824,188.983333 C79.0366135,195.275 84.3618345,200 90.6704297,200 L109.337871,200 C115.646466,200 120.971687,195.275 121.721718,189.025 L123.713468,173.358333 C127.688633,172.066667 131.522125,170.475 135.163943,168.616667 L147.622793,178.291667 C152.664669,182.208333 159.781631,181.75 164.115144,177.275 L177.240689,164.15 C181.757543,159.766667 182.215896,152.658333 178.299066,147.608333 L168.623665,135.158333 C170.490409,131.516667 172.082142,127.683333 173.365528,123.708333 L188.999511,121.716667 C195.274771,120.966667 199.999978,115.641667 199.999978,109.333333 L199.999978,90.6666667 C200.008301,84.3583333 195.283105,79.0333333 189.032845,78.2833333 Z M100.00415,141.666667 C77.0281968,141.666667 58.3357544,122.975 58.3357544,100 C58.3357544,77.025 77.0281968,58.3333333 100.00415,58.3333333 C122.980104,58.3333333 141.672546,77.025 141.672546,100 C141.672546,122.975 122.980104,141.666667 100.00415,141.666667 Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcon);\nexport default __webpack_public_path__ + \"static/media/icon.780af732.svg\";\nexport { ForwardRef as ReactComponent };","import { get, set } from './Storage'\n\nclass ValidatorServiceController {\n\n    validators = []\n    storageKey = 'validators'\n\n    async load () {\n        if (this.validators.length > 0) {\n            return this.validators\n        } else {\n            this.validators = (await get(this.storageKey)) || []\n            return this.validators\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.validators)\n    }\n\n    get (id) {\n        return this.validators.find(validator => validator.id === id)\n    }\n\n    create (validator) {\n        let id = Math.max(...this.validators.map(validator => parseInt(validator.id)), 0) + 1\n        this.validators.push({\n            id: id.toString(),\n            name: validator.name,\n            url: validator.url,\n        })\n        this.save()\n    }\n\n    update (id, validator) {\n        let index = this.validators.indexOf(this.get(id))\n        this.validators[index] = validator\n        this.save()\n    }\n\n    delete (validator) {\n        let index = this.validators.indexOf(validator)\n        if (index > -1) {\n            this.validators.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const ValidatorService = new ValidatorServiceController()\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Grid, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport { ChevronLeft } from '@material-ui/icons'\n\nimport { ReactComponent as Logo } from './../assets/icon.svg'\n\nexport default class Header extends React.Component {\n    render () {\n        return (\n            <AppBar position=\"fixed\" style={{ top: 0, bottom: 'auto' }}>\n                <Toolbar>\n                    <Grid container justifyContent=\"flex-start\">\n                        {this.props.backTo ? (\n                            <IconButton edge=\"start\" color=\"inherit\" component={props => <Link {...props} to={this.props.backTo}/>}>\n                                <ChevronLeft/>\n                            </IconButton>\n                        ) : null}\n                        <Typography variant=\"h6\" style={{ position: 'relative', top: -2, whiteSpace: 'nowrap' }}>\n                            <Logo width={24} height={24} style={{ position: 'relative', top: 5 }}/> {this.props.title}\n                        </Typography>\n                    </Grid>\n                    <Grid container justifyContent=\"flex-end\">\n                        {this.props.children ? this.props.children : null}\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, ListItemText, ListSubheader, Typography } from '@material-ui/core'\nimport { Launch } from '@material-ui/icons'\n\nimport { ValidatorService } from '../services/ValidatorService'\nimport Header from '../components/Header'\n\nexport default class Home extends React.Component {\n\n    actions = [\n        {\n            id: 'toggleGridOverlay',\n            name: 'Grid Overlay',\n            func: this.toggleGridOverlay,\n            params: [],\n        }, {\n            id: 'toggleFocus',\n            name: 'Outline Focus',\n            func: this.toggleFocus,\n            params: [],\n        }, {\n            id: 'toggleOutlines',\n            name: 'Outline Headings',\n            func: this.toggleOutlines,\n            params: ['outlineHeadings'],\n        }, {\n            id: 'toggleOutlines',\n            name: 'Outline Image Alternative Attributes',\n            func: this.toggleOutlines,\n            params: ['outlineElementAttribute', 'img', 'alt'],\n        }, {\n            id: 'toggleOutlines',\n            name: 'Outline Anchor Title Attributes',\n            func: this.toggleOutlines,\n            params: ['outlineElementAttribute', 'a', 'title'],\n        }, {\n            id: 'toggleOutlines',\n            name: 'Outline Button Title Attributes',\n            func: this.toggleOutlines,\n            params: ['outlineElementAttribute', 'button', 'title'],\n        },\n    ]\n\n    columns = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\n    state = {\n        validators: [],\n        columnMenuOpen: false,\n        column: 12,\n        anchorEl: null,\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            validators: [],\n            columnMenuOpen: false,\n            column: 12,\n            anchorEl: null,\n        }\n\n        this.toggleMenu = this.toggleMenu.bind(this)\n        this.setColumn = this.setColumn.bind(this)\n    }\n\n    async componentDidMount () {\n        this.setState({\n            validators: [...(await ValidatorService.load())],\n        })\n    }\n\n    toggleGridOverlay (columns) {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'toggleGridOverlay',\n                columns: columns,\n            })\n        })\n    }\n\n    toggleFocus () {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'toggleFocus',\n            })\n        })\n    }\n\n    toggleOutlines (params) {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: params[0],\n                selector: params[1],\n                attribute: params[2],\n            })\n        })\n    }\n\n    validate (url) {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.create({ url: url + tabs[0].url })\n        })\n    }\n\n    toggleMenu (menu, state) {\n        this.setState({\n            [menu]: state,\n        })\n    }\n\n    setColumn (event) {\n        this.setState({\n            anchorEl: event.currentTarget,\n        })\n        console.log(this.state)\n    }\n\n    render () {\n        // @ts-ignore\n        return (\n            <>\n\n                <Header title=\"Dirty Little Helper\"/>\n\n                <main>\n                    <List subheader={<li/>} style={{ backgroundColor: 'inherit' }}>\n\n                        {this.actions.length > 0 ? (\n                            <li style={{ backgroundColor: 'inherit' }}>\n                                <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                    <ListSubheader style={{ backgroundColor: '#ddd' }}>\n                                        <ListItemText disableTypography primary={\n                                            <Typography style={{ fontSize: 16, fontWeight: 'bold' }}>\n                                                Tools\n                                            </Typography>\n                                        } style={{ paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0 }}/>\n                                    </ListSubheader>\n                                    <List>\n                                        {this.actions.map((action, index) => (\n                                            action.id === 'toggleGridOverlay' ? (\n                                                <ListItem key={index} button onClick={() => action.func(action.params)}>\n                                                    <ListItemText>{action.name}</ListItemText>\n                                                    {/*}\n                          <ListItemSecondaryAction>\n                            <IconButton aria-label=\"more\" aria-controls=\"column-menu\" aria-haspopup=\"true\" onClick={() => this.toggleMenu('columnMenuOpen', true)}>\n                              <MoreVert />\n                            </IconButton>\n                            <Menu id=\"column-menu\" anchorEl={this.state.anchorEl} keepMounted open={this.state.columnMenuOpen} onClose={() => this.toggleMenu('columnMenuOpen', false)}>\n                              {this.columns.map((column) => (\n                                <MenuItem key={column} selected={column === this.state.column} onClick={() => this.toggleMenu('columnMenuOpen', false)}>\n                                  {column === 1 ? column + ' Column' : column + ' Columns'}\n                                </MenuItem>\n                              ))}\n                            </Menu>\n                          </ListItemSecondaryAction>\n                          {*/}\n                                                </ListItem>\n                                            ) : (\n                                                <ListItem key={index} button onClick={() => action.func(action.params)}>\n                                                    <ListItemText>{action.name}</ListItemText>\n                                                </ListItem>\n                                            )\n                                        ))}\n                                    </List>\n                                </ul>\n                            </li>\n                        ) : null}\n\n                        {this.state.validators.length > 0 ? (\n                            <li style={{ backgroundColor: 'inherit' }}>\n                                <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                    <ListSubheader style={{ backgroundColor: '#ddd' }}>\n                                        <ListItemText disableTypography primary={\n                                            <Typography style={{ fontSize: 16, fontWeight: 'bold' }}>\n                                                Validators\n                                            </Typography>\n                                        } style={{ paddingTop: 16, paddingBottom: 16, paddingRight: 48, margin: 0 }}/>\n                                    </ListSubheader>\n                                    <List>\n                                        {this.state.validators.map((validator, index) => (\n                                            <ListItem key={index} button onClick={() => this.validate(validator.url)}>\n                                                <ListItemText>{validator.name}</ListItemText>\n                                                <Launch/>\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ul>\n                            </li>\n                        ) : null}\n                    </List>\n                </main>\n            </>\n        )\n    }\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\n\nimport Header from '../components/Header'\n\nexport default class Texts extends React.Component {\n\n    actions = [\n        {\n            id: 'a11y',\n            name: 'A11y',\n            func: this.toggleA11y,\n            params: ['en', 'all'],\n        }, {\n            id: 'tota11y',\n            name: 'Tota11y',\n            func: this.toggleTota11y,\n            params: [],\n        }\n    ]\n\n    toggleA11y () {\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true\n        }, (tabs) => {\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'toggleA11y'\n            })\n        })\n    }\n\n    toggleTota11y () {\n        chrome.tabs.query({\n            active: true,\n            currentWindow: true\n        }, (tabs) => {\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'toggleTota11y'\n            })\n        })\n    }\n\n    render () {\n        return (\n            <>\n                <Header title=\"Debug\"/>\n                <main>\n                    <List subheader={<li/>} style={{ backgroundColor: 'inherit' }}>\n                        {this.actions.length > 0 ? (\n                            <li style={{ backgroundColor: 'inherit' }}>\n                                <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                    <List>\n                                        {this.actions.map((action, index) => (\n                                            <ListItem key={index} button onClick={() => action.func(action.params)}>\n                                                <ListItemText>{action.name}</ListItemText>\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ul>\n                            </li>\n                        ) : null}\n                    </List>\n                </main>\n            </>\n        )\n    }\n}\n","import { get, set } from './Storage'\n\nclass TextServiceController {\n\n    texts = []\n    storageKey = 'texts'\n\n    async load () {\n        if (this.texts.length > 0) {\n            return this.texts\n        } else {\n            this.texts = (await get(this.storageKey)) || []\n            return this.texts\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.texts)\n    }\n\n    get (id) {\n        return this.texts.find(text => text.id === id)\n    }\n\n    create (text) {\n        let id = Math.max(...this.texts.map(text => parseInt(text.id)), 0) + 1\n        this.texts.push({\n            id: id.toString(),\n            name: text.name,\n            content: text.content,\n        })\n        this.save()\n    }\n\n    update (id, text) {\n        let index = this.texts.indexOf(this.get(id))\n        this.texts[index] = text\n        this.save()\n    }\n\n    delete (text) {\n        let index = this.texts.indexOf(text)\n        if (index > -1) {\n            this.texts.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const TextService = new TextServiceController()\n","/*global chrome*/\n\n/**\n * cropText\n *\n * @param str\n * @param chars\n */\nexport function cropText (str, chars) {\n    if (!chars) {\n        chars = 30\n    }\n    return str.length > chars ? str.substring(0, chars - 3) + '...' : str\n}\n\n/**\n * openPopupWindow\n *\n * @param windowWidth\n * @param windowHeight\n * @param url\n * @param userAgent\n */\nexport function openPopupWindow (windowWidth, windowHeight, url, userAgent) {\n    let width = windowWidth + 10\n    let height = windowHeight + 28\n    let left = Math.round(window.screen.width / 2 - width / 2)\n    let top = Math.round(window.screen.height / 2 - height / 2)\n    // @ts-ignore\n    chrome.windows.create({\n        url: url,\n        type: 'popup',\n        width: width,\n        height: height,\n        left: left,\n        top: top,\n        focused: !0,\n        // @ts-ignore\n    }, (info) => {\n        addListener(info, userAgent)\n        // @ts-ignore\n        chrome.tabs.insertCSS(info.tabs[0].id, {\n            runAt: 'document_start',\n            code: '::-webkit-scrollbar{width:9px!important;height:9px!important}::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment{height:0;width:0;display:none}::-webkit-scrollbar-track-piece{margin:1px;padding:0;width:6px!important;height:5px!important;background:rgba(255,255,255,0.3)}::-webkit-scrollbar:hover{background:rgba(128,128,128,0.2)}::-webkit-scrollbar-thumb{margin:1px!important;border:2px solid transparent;width:5px!important;background-color:rgba(0,0,0,0.4)!important;z-index:9999;-webkit-border-radius:12px;background-clip:content-box}::-webkit-scrollbar-corner{background:rgba(255,255,255,0.3);border:1px solid transparent}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,0.8)!important;border:2px solid transparent}::-webkit-scrollbar-thumb:active{background-color:rgba(0,0,0,0.6)!important;border:2px solid transparent}',\n        })\n    })\n}\n\n/**\n * addListener\n *\n * @param info\n * @param userAgent\n */\nexport function addListener (info, userAgent) {\n    // @ts-ignore\n    chrome.webRequest.onBeforeSendHeaders.addListener((details) => {\n        for (let i = 0; i < details.requestHeaders.length; ++i) {\n            if (details.requestHeaders[i].name === 'User-Agent') {\n                details.requestHeaders[i].value = userAgent\n                break\n            }\n        }\n        return {\n            requestHeaders: details.requestHeaders,\n        }\n    }, {\n        urls: ['<all_urls>'],\n        windowId: info.id,\n    }, [\n        'blocking',\n        'requestHeaders',\n    ])\n}\n","/*global chrome*/\n\nimport React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Slide, TextField } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport { TextService } from '../services/TextService'\nimport { cropText } from '../utilities/Utilities'\n\nimport Header from '../components/Header'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Texts extends React.Component {\n\n    state = {\n        dialogOpen: false,\n        text: {\n            id: undefined,\n            name: undefined,\n            content: undefined,\n        },\n        texts: [],\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            dialogOpen: false,\n            text: {\n                id: undefined,\n                name: undefined,\n                content: undefined,\n            },\n            texts: [],\n        }\n\n        this.insertText = this.insertText.bind(this)\n        this.openNewDialog = this.openNewDialog.bind(this)\n        this.openEditDialog = this.openEditDialog.bind(this)\n        this.closeDialog = this.closeDialog.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    async componentDidMount () {\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n    }\n\n    insertText (text) {\n        // @ts-ignore\n        chrome.tabs.query({\n            'active': true, 'currentWindow': true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            chrome.tabs.sendMessage(tabs[0].id, {\n                function: 'insertText', text: text.content,\n            })\n        })\n    }\n\n    openNewDialog () {\n        this.setState({\n            text: {\n                id: undefined,\n                name: undefined,\n                content: undefined,\n            },\n            dialogOpen: true,\n        })\n    }\n\n    openEditDialog (text) {\n        this.setState({\n            text: text,\n            dialogOpen: true,\n        })\n    }\n\n    closeDialog () {\n        this.setState({\n            dialogOpen: false,\n        })\n    }\n\n    handleChange (event) {\n        this.setState({\n            text: { ...this.state.text, [event.target.name]: event.target.value },\n        })\n    }\n\n    async handleSubmit (event) {\n        if (typeof this.state.text.id === 'undefined') {\n            TextService.create(this.state.text)\n        } else {\n            TextService.update(this.state.text.id, this.state.text)\n        }\n\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n\n        this.closeDialog()\n\n        event.preventDefault()\n    }\n\n    async handleDelete (text) {\n        let texts = [...(await TextService.load())]\n        let index = texts.indexOf(text)\n\n        if (index > -1) {\n            texts.splice(index, 1)\n        }\n\n        await TextService.delete(text)\n        this.setState({\n            texts: [...(await TextService.load())],\n        })\n    }\n\n    render () {\n        return (\n            <>\n\n                <Header title=\"Dummy Texts\">\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={this.openNewDialog}>\n                        <Add/>\n                    </IconButton>\n                </Header>\n\n                <main>\n                    {this.state.texts.length > 0 ? (\n                        <List>\n                            {this.state.texts.map((text, index) => (\n                                <ListItem key={index} dense button onClick={() => this.insertText(text)} title=\"Insert\">\n                                    <ListItemText primary={text.name} secondary={cropText(text.content, 70)} style={{ paddingRight: 48 }}/>\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge=\"start\" color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog(text)}>\n                                            <Edit/>\n                                        </IconButton>\n                                        <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.handleDelete(text)}}>\n                                            <Delete/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : null}\n                </main>\n\n                <Dialog open={this.state.dialogOpen} onClose={this.closeDialog} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                        <DialogTitle>\n                            Text\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter a name and the text, that will be inserted.\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.text.name || ''} autoFocus fullWidth required onChange={this.handleChange}/>\n                            <TextField label=\"Content\" name=\"content\" value={this.state.text.content || ''} autoFocus fullWidth multiline rows={6} required onChange={this.handleChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.closeDialog} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n            </>\n        )\n    }\n}\n","import { get, set } from './Storage'\n\nclass DeviceServiceController {\n\n    devices = []\n    storageKey = 'devices'\n\n    async load () {\n        if (this.devices.length > 0) {\n            return this.devices\n        } else {\n            this.devices = (await get(this.storageKey)) || []\n            return this.devices\n        }\n    }\n\n    async save () {\n        return await set(this.storageKey, this.devices)\n    }\n\n    get (id) {\n        return this.devices.find(device => device.id === id)\n    }\n\n    create (device) {\n        let id = Math.max(...this.devices.map(device => parseInt(device.id)), 0) + 1\n        this.devices.push({\n            id: id.toString(), name: device.name, content: device.content,\n        })\n        this.save()\n    }\n\n    update (id, device) {\n        let index = this.devices.indexOf(this.get(id))\n        this.devices[index] = device\n        this.save()\n    }\n\n    delete (device) {\n        let index = this.devices.indexOf(device)\n        if (index > -1) {\n            this.devices.splice(index, 1)\n            this.save()\n        }\n    }\n}\n\nexport const DeviceService = new DeviceServiceController()\n","/*global chrome*/\n\nimport React from 'react'\nimport { Avatar, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, ListSubheader, MenuItem, Slide, TextField, Typography } from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport Header from '../components/Header'\nimport { DeviceService } from '../services/DeviceService'\nimport { cropText, openPopupWindow } from '../utilities/Utilities'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default class Devices extends React.Component {\n\n    state = {\n        dialogOpen: false,\n        groupDialogOpen: false,\n        deviceDialogOpen: false,\n        group: {\n            id: undefined,\n            name: undefined,\n            userAgents: [],\n        },\n        device: {\n            id: undefined,\n            name: undefined,\n            group: undefined,\n            userAgent: undefined,\n            width: undefined,\n            height: undefined,\n        },\n        devices: [],\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            dialogOpen: false,\n            groupDialogOpen: false,\n            deviceDialogOpen: false,\n            group: {\n                id: undefined,\n                name: undefined,\n                userAgents: [],\n            },\n            device: {\n                id: undefined,\n                name: undefined,\n                group: undefined,\n                userAgent: undefined,\n                width: undefined,\n                height: undefined,\n            },\n            devices: [],\n        }\n\n        this.openDialog = this.openDialog.bind(this)\n        this.openEditDialog = this.openEditDialog.bind(this)\n        this.closeDialog = this.closeDialog.bind(this)\n\n        this.handleGroupChange = this.handleGroupChange.bind(this)\n        this.handleGroupSubmit = this.handleGroupSubmit.bind(this)\n\n        this.handleDeviceChange = this.handleDeviceChange.bind(this)\n        this.handleDeviceSubmit = this.handleDeviceSubmit.bind(this)\n    }\n\n    async componentDidMount () {\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    openDialog (which) {\n        this.setState({\n            group: {},\n            device: {},\n            [which]: true,\n        })\n    }\n\n    openEditDialog (which, item) {\n        this.setState({\n            group: item,\n            device: item,\n            [which]: true,\n        })\n    }\n\n    closeDialog (which) {\n        this.setState({\n            [which]: false,\n        })\n    }\n\n    handleGroupChange (event) {\n        this.setState({\n            group: { ...this.state.group, [event.target.name]: event.target.value },\n        })\n    }\n\n    handleDeviceChange (event) {\n        this.setState({\n            device: { ...this.state.device, [event.target.name]: event.target.value },\n        })\n    }\n\n    async handleGroupSubmit (event) {\n\n        if (typeof this.state.group.id === 'undefined') {\n            DeviceService.create(this.state.group)\n        } else {\n            DeviceService.update(this.state.group.id, this.state.group)\n        }\n\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n\n        this.closeDialog('groupDialogOpen')\n        this.closeDialog('dialogOpen')\n\n        event.preventDefault()\n    }\n\n    async handleDeviceSubmit (event) {\n\n        let group = await DeviceService.get(this.state.device.group)\n\n        let device = this.state.device\n        delete device.group\n\n        if (group.userAgents) {\n            // @ts-ignore\n            device.id = (Math.max(...group.userAgents.map((device) => parseInt(device.id)), 0) + 1).toString()\n        } else {\n            // @ts-ignore\n            device.id = (1).toString()\n            group.userAgents = []\n        }\n\n        group.userAgents.push(device)\n        DeviceService.update(this.state.group.id, this.state.group)\n\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n\n        this.closeDialog('deviceDialogOpen')\n        this.closeDialog('dialogOpen')\n\n        event.preventDefault()\n    }\n\n    openGroupBrowser (group) {\n        group.userAgents.forEach((userAgent) => {\n            // @ts-ignore\n            chrome.tabs.query({\n                active: true, currentWindow: true,\n                // @ts-ignore\n            }, (tabs) => {\n                // @ts-ignore\n                openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n            })\n        })\n    }\n\n    openDeviceBrowser (userAgent) {\n        // @ts-ignore\n        chrome.tabs.query({\n            active: true, currentWindow: true,\n            // @ts-ignore\n        }, (tabs) => {\n            // @ts-ignore\n            openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n        })\n    }\n\n    async deleteGroup (group) {\n        // @ts-ignore\n        let indexGroup = this.state.devices.indexOf(group)\n        // @ts-ignore\n        this.state.devices.splice(indexGroup, 1)\n\n        DeviceService.devices = this.state.devices\n\n        await DeviceService.save()\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    async deleteDevice (group, device) {\n        let indexGroup = this.state.devices.indexOf(group)\n        let indexDevice = this.state.devices[indexGroup].userAgents.indexOf(device)\n        this.state.devices[indexGroup].userAgents.splice(indexDevice, 1)\n\n        await DeviceService.save()\n        this.setState({\n            devices: [...(await DeviceService.load())],\n        })\n    }\n\n    render () {\n        return (\n            <>\n\n                <Header title=\"Devices\">\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={() => this.openDialog('dialogOpen')}>\n                        <Add/>\n                    </IconButton>\n                </Header>\n\n                <main>\n                    {this.state.devices.length > 0 ? (\n                        <List subheader={<li/>} style={{ backgroundColor: 'inherit' }}>\n                            {this.state.devices.map((group, groupIndex) => (\n                                <li key={`section-${groupIndex}`} style={{ backgroundColor: 'inherit' }}>\n                                    <ul style={{ backgroundColor: 'inherit', padding: 0 }}>\n                                        <ListSubheader title=\"Open all in Browser\" style={{ cursor: 'pointer', backgroundColor: '#ddd' }}>\n                                            <ListItemText disableTypography primary={<Typography style={{ fontSize: 18, fontWeight: 'bold' }}>{cropText(group.name, 25)}</Typography>} onClick={() => this.openGroupBrowser(group)} style={{ paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0 }}/>\n                                            <ListItemSecondaryAction>\n                                                <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('groupDialogOpen', group)}>\n                                                    <Edit/>\n                                                </IconButton>\n                                                <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this group?')) this.deleteGroup(group)}}>\n                                                    <Delete/>\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListSubheader>\n                                        {group.userAgents?.length > 0 ? (\n                                            <List>\n                                                {group.userAgents.map((device, deviceIndex) => (\n                                                    <ListItem key={deviceIndex} dense button onClick={() => this.openDeviceBrowser(device)} title=\"Open in Browser\">\n                                                        <ListItemText style={{ paddingRight: 48 }} primary={device.name} secondary={`Width ${device.width}px Height ${device.height}px`}/>\n                                                        <ListItemSecondaryAction>\n                                                            <IconButton color=\"inherit\" title=\"Edit Element\" onClick={() => this.openEditDialog('deviceDialogOpen', device)}>\n                                                                <Edit/>\n                                                            </IconButton>\n                                                            <IconButton edge=\"end\" color=\"inherit\" title=\"Delete Element\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteDevice(group, device)}}>\n                                                                <Delete/>\n                                                            </IconButton>\n                                                        </ListItemSecondaryAction>\n                                                    </ListItem>\n                                                ))}\n                                            </List>\n                                        ) : null}\n                                    </ul>\n                                </li>))}\n                        </List>\n                    ) : null}\n                </main>\n\n                <Dialog open={this.state.dialogOpen} onClose={() => this.closeDialog('dialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <DialogTitle>\n                        Add New Element\n                    </DialogTitle>\n                    <List>\n                        <ListItem autoFocus button onClick={() => this.openDialog('groupDialogOpen')}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <Add/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"Add Group\"/>\n                        </ListItem>\n                        {this.state.devices?.length > 0 ? (\n                            <ListItem autoFocus button onClick={() => this.openDialog('deviceDialogOpen')}>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <Add/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Add Device\"/>\n                            </ListItem>\n                        ) : null}\n                    </List>\n                </Dialog>\n\n                <Dialog open={this.state.groupDialogOpen} onClose={() => this.closeDialog('groupDialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleGroupSubmit}>\n                        <DialogTitle>\n                            Group\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter the name of the group\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.group.name || ''} autoFocus fullWidth required onChange={this.handleGroupChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => this.closeDialog('groupDialogOpen')} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n                <Dialog open={this.state.deviceDialogOpen} onClose={() => this.closeDialog('deviceDialogOpen')} TransitionComponent={Transition} keepMounted>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleDeviceSubmit}>\n                        <DialogTitle>\n                            Device\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter the name, user agent and size of the new device.\n                            </DialogContentText>\n                            <TextField type=\"text\" label=\"Name\" name=\"name\" value={this.state.device.name || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                            <TextField select label=\"Group\" name=\"group\" value={this.state.device.group || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}>\n                                {this.state.devices.map((group) => (\n                                    <MenuItem key={group.id} value={group.id}>\n                                        {group.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                            <TextField type=\"text\" label=\"UserAgent\" name=\"userAgent\" value={this.state.device.userAgent || ''} autoFocus fullWidth multiline rows={3} required onChange={this.handleDeviceChange}/>\n                            <TextField type=\"text\" label=\"Width\" name=\"width\" value={this.state.device.width || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                            <TextField type=\"text\" label=\"Height\" name=\"height\" value={this.state.device.height || ''} autoFocus fullWidth required onChange={this.handleDeviceChange}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => this.closeDialog('deviceDialogOpen')} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { Apps, Devices, Flip, Message } from '@material-ui/icons'\n\nexport default class Footer extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            value: 0\n        }\n    }\n\n    handleChange (event, value) {\n        this.setState({\n            value: value\n        })\n    }\n\n    render () {\n        return (\n            <AppBar position=\"fixed\" style={{ top: 'auto', bottom: 0 }}>\n                <BottomNavigation showLabels value={this.state.value} onChange={(event, value) => this.handleChange.bind(this)}>\n                    <BottomNavigationAction label=\"Tools\" icon={<Apps/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/\"/>)}/>\n                    <BottomNavigationAction label=\"Debug\" icon={<Flip/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/debug\"/>)}/>\n                    <BottomNavigationAction label=\"Devices\" icon={<Devices/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/devices\"/>)}/>\n                    <BottomNavigationAction label=\"Texts\" icon={<Message/>} component={React.forwardRef((props, ref) => <Link {...props} to=\"/texts\"/>)}/>\n                </BottomNavigation>\n            </AppBar>\n        )\n    }\n}\n","import React from 'react'\nimport { MemoryRouter as Router, Route } from 'react-router-dom'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport Home from './pages/Home'\nimport Debug from './pages/Debug'\nimport Texts from './pages/Texts'\nimport Devices from './pages/Devices'\nimport Footer from './components/Footer'\n\nconst theme = createTheme({\n    typography: {\n        htmlFontSize: 12,\n        fontSize: 10,\n        fontFamily: [\n            'Helvetica',\n            'Helvetica Neue',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            light: '#3572e3',\n            main: '#1E61D9',\n            dark: '#15459d',\n            contrastText: '#ffffff',\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            disableRipple: true,\n        },\n    },\n})\n\nexport default class App extends React.Component {\n    render () {\n        return (\n            <ThemeProvider theme={theme}>\n                <Router>\n                    <Route path=\"/\" component={Home} exact={true}/>\n                    <Route path=\"/debug\" component={Debug} exact={true}/>\n                    <Route path=\"/devices\" component={Devices} exact={true}/>\n                    <Route path=\"/texts\" component={Texts} exact={true}/>\n                    <Footer/>\n                </Router>\n            </ThemeProvider>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>, document.getElementById('root'))\n"],"sourceRoot":""}