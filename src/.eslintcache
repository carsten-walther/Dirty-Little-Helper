[{"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/index.tsx":"1","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/global/App.tsx":"2","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Home.tsx":"3","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/TextService.ts":"4","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/Storage.ts":"5","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/utilities/Utilities.ts":"6","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/components/Footer.tsx":"7","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/components/Header.tsx":"8","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Texts.tsx":"9","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Devices.tsx":"10","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/DeviceService.ts":"11","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/interfaces/Text.ts":"12"},{"size":148,"mtime":1608888612641,"results":"13","hashOfConfig":"14"},{"size":568,"mtime":1609007319515,"results":"15","hashOfConfig":"14"},{"size":4800,"mtime":1609013214896,"results":"16","hashOfConfig":"14"},{"size":1125,"mtime":1608914598135,"results":"17","hashOfConfig":"14"},{"size":904,"mtime":1608574899524,"results":"18","hashOfConfig":"14"},{"size":2435,"mtime":1608973744492,"results":"19","hashOfConfig":"14"},{"size":1239,"mtime":1609007079840,"results":"20","hashOfConfig":"14"},{"size":1177,"mtime":1609006832539,"results":"21","hashOfConfig":"14"},{"size":5452,"mtime":1609007333286,"results":"22","hashOfConfig":"14"},{"size":7741,"mtime":1609007342042,"results":"23","hashOfConfig":"14"},{"size":1120,"mtime":1608914855961,"results":"24","hashOfConfig":"14"},{"size":72,"mtime":1608574899519,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vn7uif",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/index.tsx",[],["53","54"],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/global/App.tsx",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Home.tsx",["55","56","57","58"],"/*global chrome*/\n\nimport React from 'react'\nimport { List, ListItem, Grid, Paper, Button, ListItemText, Typography, ListItemSecondaryAction, IconButton, ListSubheader } from '@material-ui/core'\n\nimport Header from '../components/Header'\nimport { cropText, openPopupWindow } from \"../utilities/Utilities\";\n\nexport default class Home extends React.Component {\n\n  actions = [\n    {\n      name: 'Tools',\n      actions: [\n        {\n          name: 'Grid Overlay',\n          func: this.toggleGridOverlay,\n          params: []\n        }, {\n          name: 'Outline Headings',\n          func: this.toggleOutlines,\n          params: ['outlineHeadings']\n        }, {\n          name: 'Outline Image Alternative Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'img', 'alt']\n        }, {\n          name: 'Outline Anchor Title Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'a', 'title']\n        }, {\n          name: 'Outline Button Title Attributes',\n          func: this.toggleOutlines,\n          params: ['outlineElementAttribute', 'button', 'title']\n        }\n      ]\n    }, {\n      name: 'Validation',\n      actions: [\n        {\n          name: 'Validate CSS',\n          func: this.validate,\n          params: ['http://jigsaw.w3.org/css-validator/validator?profile=css3&warning=0&uri=']\n        }, {\n          name: 'Validate HTML',\n          func: this.validate,\n          params: ['http://validator.w3.org/check?verbose=1&uri=']\n        }, {\n          name: 'Validate Feed',\n          func: this.validate,\n          params: ['http://validator.w3.org/feed/check.cgi?url=']\n        }, {\n          name: 'Validate Accessibility',\n          func: this.validate,\n          params: ['http://wave.webaim.org/report#/']\n        }, {\n          name: 'Validate Links',\n          func: this.validate,\n          params: ['http://validator.w3.org/checklink?check=Check&hide_type=all&summary=on&uri=']\n        }, {\n          name: 'Validate Structured Data',\n          func: this.validate,\n          params: ['https://search.google.com/test/rich-results?url=']\n        }\n      ]\n    }\n  ]\n\n  toggleGridOverlay() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleGridOverlay'\n      })\n    })\n  }\n\n  toggleOutlines(params: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: params[0],\n        selector: params[1],\n        attribute: params[2]\n      })\n    })\n  }\n\n  validate(url: string) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.create({ url: url + tabs[0].url })\n    })\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header title=\"Dirty Little Helper\"/>\n\n        <main>\n\n          {this.actions.length > 0 ? (\n            <List subheader={<li/>} style={{backgroundColor: 'inherit'}}>\n              {this.actions.map((action: any, index: number) => (\n                <li key={`section-${index}`} style={{backgroundColor: 'inherit'}}>\n                  <ul style={{backgroundColor: 'inherit', padding: 0}}>\n                    <ListSubheader style={{backgroundColor: '#ddd'}}>\n                      <ListItemText disableTypography primary={<Typography style={{fontSize: 18, fontWeight: 'bold'}}>{cropText(action.name, 25)}</Typography>} style={{paddingTop: 18, paddingBottom: 18, paddingRight: 48, margin: 0}}/>\n                    </ListSubheader>\n                    {action.actions.length > 0 ? (\n                      <Grid container style={{ paddingTop: 10, paddingBottom: 10, paddingLeft: 10, paddingRight: 10 }}>\n                        {action.actions.map((action: any, index: number) => (\n                          <Grid key={index} item xs={4} style={{ padding: 10 }}>\n                            <Paper elevation={0} style={{ margin: 0, padding: 0, height: 95 }}>\n                              <Button variant=\"contained\" color=\"primary\" onClick={() => action.func(action.params)} style={{ width: '100%', height: '100%', lineHeight: 1.25, textTransform: 'none' }}>\n                                {action.name}\n                              </Button>\n                            </Paper>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    ) : null}\n                  </ul>\n                </li>\n              ))}\n            </List>\n          ) : null}\n\n        </main>\n      </>\n    )\n  }\n}\n","/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/TextService.ts",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/Storage.ts",[],["59","60"],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/utilities/Utilities.ts",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/components/Footer.tsx",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/components/Header.tsx",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Texts.tsx",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/pages/Devices.tsx",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/services/DeviceService.ts",[],"/Users/carstenwalther/Desktop/dirty-little-helper.git/src/src/interfaces/Text.ts",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":16,"nodeType":"67","messageId":"68","endLine":4,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":4,"column":73,"nodeType":"67","messageId":"68","endLine":4,"endColumn":96},{"ruleId":"65","severity":1,"message":"70","line":4,"column":98,"nodeType":"67","messageId":"68","endLine":4,"endColumn":108},{"ruleId":"65","severity":1,"message":"71","line":7,"column":20,"nodeType":"67","messageId":"68","endLine":7,"endColumn":35},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'ListItemSecondaryAction' is defined but never used.","'IconButton' is defined but never used.","'openPopupWindow' is defined but never used.",["74"],["75"],"no-global-assign","no-unsafe-negation"]