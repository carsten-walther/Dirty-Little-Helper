[{"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/index.tsx":"1","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/global/App.tsx":"2","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Home.tsx":"3","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/DeviceManager.tsx":"4","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentGroupsForm.tsx":"5","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentsForm.tsx":"6","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/TextsForm.tsx":"7","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Texts.tsx":"8","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentGroups.tsx":"9","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgents.tsx":"10","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Settings.tsx":"11","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/UserAgentGroupService.ts":"12","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/DeviceService.ts":"13","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/TextService.ts":"14","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/UserAgentService.ts":"15","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/Storage.ts":"16","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/components/Header.tsx":"17","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/components/Footer.tsx":"18"},{"size":617,"mtime":1608622780183,"results":"19","hashOfConfig":"20"},{"size":1660,"mtime":1608731014672,"results":"21","hashOfConfig":"20"},{"size":3956,"mtime":1608733318676,"results":"22","hashOfConfig":"20"},{"size":3952,"mtime":1608735503789,"results":"23","hashOfConfig":"20"},{"size":2690,"mtime":1608727441424,"results":"24","hashOfConfig":"20"},{"size":2629,"mtime":1608727451888,"results":"25","hashOfConfig":"20"},{"size":2645,"mtime":1608735711373,"results":"26","hashOfConfig":"20"},{"size":1793,"mtime":1608735609897,"results":"27","hashOfConfig":"20"},{"size":1874,"mtime":1608727438398,"results":"28","hashOfConfig":"20"},{"size":1736,"mtime":1608727445283,"results":"29","hashOfConfig":"20"},{"size":1983,"mtime":1608732348977,"results":"30","hashOfConfig":"20"},{"size":1772,"mtime":1608652275391,"results":"31","hashOfConfig":"20"},{"size":1387,"mtime":1608652559192,"results":"32","hashOfConfig":"20"},{"size":1376,"mtime":1608652282359,"results":"33","hashOfConfig":"20"},{"size":1625,"mtime":1608652288498,"results":"34","hashOfConfig":"20"},{"size":904,"mtime":1608533611083,"results":"35","hashOfConfig":"20"},{"size":1056,"mtime":1608735670235,"results":"36","hashOfConfig":"20"},{"size":479,"mtime":1608726773724,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"133huco",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/index.tsx",[],["77","78"],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/global/App.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Home.tsx",["79"],"/*global chrome*/\n\nimport React from 'react'\nimport { DeviceService } from '../services/DeviceService'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport {Link} from \"react-router-dom\";\nimport {ReactComponent as IconChevronRight} from \"../assets/icons/chevron-right.svg\";\n\nexport default class Home extends React.Component {\n\n  state = {\n    devices: []\n  }\n\n  async componentDidMount() {\n    this.setState({\n      devices: [...(await DeviceService.load())]\n    })\n  }\n\n  toggleGridOverlay() {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true,\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: 'toggleGridOverlay',\n      })\n    })\n  }\n\n  toggleOutlines(func: string, selector: string, attribute: string) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      chrome.tabs.sendMessage(tabs[0].id, {\n        function: func, selector: selector, attribute: attribute,\n      })\n    })\n  }\n\n  openBrowser(userAgent: any) {\n    // @ts-ignore\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true,\n      // @ts-ignore\n    }, (tabs) => {\n      // @ts-ignore\n      openPopupWindow(userAgent.width, userAgent.height, tabs[0].url, userAgent.userAgent)\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Header title=\"Dirty Little Helper\" />\n        <main>\n          <section>\n            <h2 className=\"title\">Tools</h2>\n            <ul className=\"button-list\">\n              <li>\n                <button onClick={this.toggleGridOverlay}>Grid Overlay</button>\n              </li>\n            </ul>\n          </section>\n          <section>\n            <h2 className=\"title\">Outlines</h2>\n            <ul className=\"button-list\">\n              <li>\n                <button onClick={() => this.toggleOutlines('outlineHeadings', '', '')}>Headings</button>\n              </li>\n              <li>\n                <button onClick={() => this.toggleOutlines('outlineElementAttribute', 'img', 'alt')}>Image Alternative Attributes</button>\n              </li>\n              <li>\n                <button onClick={() => this.toggleOutlines('outlineElementAttribute', 'a', 'title')}>Anchor Title Attributes</button>\n              </li>\n              <li>\n                <button onClick={() => this.toggleOutlines('outlineElementAttribute', 'button', 'title')}>Button Title Attributes</button>\n              </li>\n            </ul>\n          </section>\n          {this.state.devices.length > 0 ? (\n            <section>\n              <h2 className=\"title\">Devices</h2>\n              <ul className=\"stacked-list\">\n                {this.state.devices.map((group: any, groupIndex: number) => {\n                  return (\n                    <li key={groupIndex}>\n                      <h3>{group.name}</h3>\n                      {group.userAgents.length > 0 ? (\n                        <ul className=\"stacked-list\">\n                          {group.userAgents.map((device: any, deviceIndex: number) => {\n                            return (\n                              <li className=\"pointer\" key={deviceIndex} onClick={() => this.openBrowser(device)}>\n                                <div>\n                                  <p className=\"title\">{device.name}</p>\n                                  <p>Width {device.width}px Height {device.height}px</p>\n                                </div>\n                                <IconChevronRight width={18} height={18} />\n                              </li>\n                            )\n                          })}\n                        </ul>\n                      ) : null}\n                    </li>\n                  )\n                })}\n              </ul>\n            </section>\n          ) : null}\n        </main>\n        <Footer />\n      </>\n    )\n  }\n}\n","/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/DeviceManager.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentGroupsForm.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentsForm.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/TextsForm.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Texts.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgentGroups.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/UserAgents.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/pages/Settings.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/UserAgentGroupService.ts",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/DeviceService.ts",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/TextService.ts",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/UserAgentService.ts",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/services/Storage.ts",[],["80","81"],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/components/Header.tsx",[],"/Users/carsten.walther/Desktop/Dirty-Little-Helper.git/src/src/components/Footer.tsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":9,"nodeType":"88","messageId":"89","endLine":7,"endColumn":13},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["92"],["93"],"no-global-assign","no-unsafe-negation"]